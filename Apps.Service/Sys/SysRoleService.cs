//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Apps.Models;
using Apps.Common;
using Microsoft.Practices.Unity;
using System.Transactions;
using Apps.Locale;
using Apps.Models.Sys;

namespace Apps.Service.Sys
{
    public partial class SysRoleService : Virtual_SysRoleService, Apps.IService.Sys.ISysRoleService
    {
        public override List<SysRoleModel> CreateModelList(ref IQueryable<SysRole> queryData)
        {
            List<SysRoleModel> modelList = new List<SysRoleModel>();
            foreach (var r in queryData)
            {
                modelList.Add(new SysRoleModel()
                {
                    Id = r.Id,
                    Name = r.Name,
                    Description = r.Description,
                    CreateTime = r.CreateTime,
                    CreatePerson = r.CreatePerson,
                    UserName = GetRefSysUser(r.Id)
                });
            }
            return modelList;
        }

        private string GetRefSysUser(string roleId)
        {
            string UserName = "";
            var userList = m_Rep.GetRefSysUser(roleId);
            if (userList != null)
            {
                foreach (var user in userList)
                {
                    UserName += "[" + user.UserName + ":" + user.TrueName + "] ";
                }
            }
            return UserName;
        }

        public List<SysUserByRoleModel> GetUserByRoleId(ref GridPager pager, string roleId, string depId, string queryStr)
        {
            IQueryable<P_Sys_GetUserByRoleId_Result> queryData = m_Rep.GetUserByRoleId(roleId, depId);

            IQueryable<SysUserByRoleModel> userList = (
                    from r in queryData
                    select new SysUserByRoleModel()
                    {
                        Id = r.Id,
                        UserName = r.UserName,
                        TrueName = r.TrueName,
                        Flag = r.flag == 0 ? "0" : "1",
                    }
                );

            //List<SysUserByRoleModel> userList = new List<SysUserByRoleModel>();

            //foreach (var item in queryData) {
            //    userList.Add(new SysUserByRoleModel()
            //    {
            //        Id = item.Id,
            //        UserName = item.UserName,
            //        TrueName = item.TrueName,
            //        Flag = item.flag == 0 ? "0" : "1",
            //    });
            //}

            if (!string.IsNullOrWhiteSpace(queryStr))
            {
                userList = userList.Where(a => a.TrueName.Contains(queryStr));
                //queryData = m_Rep.GetUserByRoleId(roleId, depId).Where(a => a.TrueName.Contains(queryStr));
            }

            pager.totalRows = userList.Count();

            return userList.Skip((pager.page - 1) * pager.rows).Take(pager.rows).ToList();

        }

        public void UpdateSysRoleSysUser(string roleId, List<AssignUserModel> users)
        {
            m_Rep.UpdateSysRoleSysUser(roleId, users);
        }

        public override void RemoveById(ref ValidationErrors errors, string id)
        {

            SysRole role = m_Rep.GetById(id);
           
            List<SysUser> users = role.SysUser.ToList();
            foreach (var item in users)
            {
                role.SysUser.Remove(item);
            }
            m_Rep.Remove(role);
            DBSession.SysRight.RemoveBy(r=>r.RoleId==id);

            


            

        }
    }
}
