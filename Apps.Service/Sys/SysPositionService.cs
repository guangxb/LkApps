//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Apps.Models;
using Microsoft.Practices.Unity;
using System.Transactions;
using Apps.Locale;
using Apps.Models.Sys;
using Apps.Common;
using System.Linq.Expressions;

namespace Apps.Service.Sys
{
	public partial class SysPositionService: Virtual_SysPositionService,Apps.IService.Sys.ISysPositionService
	{
		public List<SysPositionModel> GetPosListByDepId(string depId)
		{

			IQueryable<SysPosition> queryData = null;
			if (!string.IsNullOrWhiteSpace(depId))
			{
				if (depId == "root")
					queryData = m_Rep.GetList();
				else
					queryData = m_Rep.GetList(a => a.DepId == depId);
			}
			else
			{
				queryData = m_Rep.GetList();
			}
			//pager.totalRows = queryData.Count();
			//queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
			return CreateModelList(ref queryData);
		}

        public override List<SysPositionModel> GetList(ref GridPager pager, string queryStr, Expression<Func<Apps.Models.SysPosition, bool>> where = null)
        {



            IQueryable<SysPosition> queryData = null;
            if (!string.IsNullOrWhiteSpace(queryStr))
            {
               queryData = m_Rep.GetList(where,
                               a => a.Id.Contains(queryStr)
                                || a.Name.Contains(queryStr)
                                || a.Remark.Contains(queryStr)
                                || a.DepId.Contains(queryStr)
                                );
            }
            else
            {
                queryData = m_Rep.GetList(where);
            }
            pager.totalRows = queryData.Count();
            //排序
            queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
            return CreateModelList(ref queryData);
        }
        public override List<SysPositionModel> CreateModelList(ref IQueryable<SysPosition> queryData)
        {

            List<SysPositionModel> modelList = (from r in queryData
                                                select new SysPositionModel
                                                {
                                                    Id = r.Id,
                                                    Name = r.Name,
                                                    Remark = r.Remark,
                                                    Sort = r.Sort,
                                                    CreateTime = r.CreateTime,
                                                    Enable = r.Enable,
                                                    MemberCount = r.MemberCount,
                                                    DepId = r.DepId,
                                                    DepName = r.SysStruct.Name
                                                }).ToList();

            return modelList;
        }
        /// <summary>
        /// 删除部门信息--更新级联职位信息
        /// </summary>
        /// <param name="errors"></param>
        /// <param name="model">职位model</param>
        public void UpdateByStruct(ref ValidationErrors errors,SysPositionModel model)
        {
            SysPosition entity = m_Rep.GetById(model.Id);
            if (entity == null)
            {
                errors.Add(Resource.Disable);
                return;
            }
            entity.DepId = model.DepId;
            m_Rep.Modify(entity);
        }

    }
}
