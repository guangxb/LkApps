//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Apps.Models;
using Apps.Common;
using Microsoft.Practices.Unity;
using System.Transactions;
using Apps.Locale;
using System.Linq.Expressions;
namespace Apps.Service.SCV.Sys
{
	public class Virtual_LOCATION_SERVICE
	{

		public Apps.IRepository.SCV.ISCVDBSession SCVDBSession{
			 get
			{
				return Service.SCV.SCVDBSessionFactory.GetDBSession();
			}
		}
	   
		public Apps.IRepository.SCV.Sys.ILOCATION_REPOSITORY m_Rep{
			 get
			{
				return SCVDBSession.LOCATION;
			}
		}
		

		public virtual List<Apps.Models.SCV.Sys.LOCATION_MODEL> GetList(Expression<Func<Apps.Models.LOCATION, bool>> where = null){
		
				IQueryable<Apps.Models.LOCATION> queryData = m_Rep.GetList(where);
				return CreateModelList(ref queryData);
		}

		public virtual List<Apps.Models.SCV.Sys.LOCATION_MODEL> GetListSort<TKey>(Expression<Func<Apps.Models.LOCATION, bool>> where,Expression<Func<Apps.Models.LOCATION, TKey>>orderBy, bool isAsc = true){
		
				IQueryable<Apps.Models.LOCATION> queryData = m_Rep.GetListSort(where, orderBy, isAsc);
				return CreateModelList(ref queryData);
		}

		public virtual List<Apps.Models.SCV.Sys.LOCATION_MODEL> GetList(ref GridPager pager, string queryStr,Expression<Func<Apps.Models.LOCATION, bool>> where = null)
		{

			IQueryable<Apps.Models.LOCATION> queryData;
			
			if (!string.IsNullOrWhiteSpace(queryStr))
			{
				queryData = m_Rep.GetList(where
								
								,a=>a.LOCATION1.Contains(queryStr)
								|| a.WAREHOUSE.Contains(queryStr)
								|| a.ZONE.Contains(queryStr)
								|| a.LOCATION_CLASS.Contains(queryStr)
								|| a.LOCATION_TYPE.Contains(queryStr)
								|| a.MULTI_ITEM.Contains(queryStr)
								|| a.TRACK_LPN.Contains(queryStr)
								|| a.LOCATION_STS.Contains(queryStr)
								
								|| a.ACTIVE.Contains(queryStr)
								|| a.USER_STAMP.Contains(queryStr)
								
								|| a.TEMPLATE_FIELD1.Contains(queryStr)
								|| a.TEMPLATE_FIELD2.Contains(queryStr)
								|| a.TEMPLATE_FIELD3.Contains(queryStr)
								|| a.TEMPLATE_FIELD4.Contains(queryStr)
								|| a.TEMPLATE_FIELD5.Contains(queryStr)
								|| a.MIN_QTY_UM.Contains(queryStr)
								
								|| a.USER_DEF1.Contains(queryStr)
								|| a.USER_DEF2.Contains(queryStr)
								|| a.USER_DEF3.Contains(queryStr)
								|| a.USER_DEF4.Contains(queryStr)
								|| a.USER_DEF5.Contains(queryStr)
								|| a.USER_DEF6.Contains(queryStr)
								|| a.USER_DEF7.Contains(queryStr)
								|| a.USER_DEF8.Contains(queryStr)
								|| a.CHECK_DIGIT.Contains(queryStr)
								
								|| a.LOCATION_SUB_CLASS.Contains(queryStr)
								|| a.LOCATION_CATEGORY01.Contains(queryStr)
								|| a.LOCATION_CATEGORY02.Contains(queryStr)
								|| a.LOCATION_CATEGORY03.Contains(queryStr)
								|| a.LOCATION_CATEGORY04.Contains(queryStr)
								|| a.LOCATION_CATEGORY05.Contains(queryStr)
								|| a.LOCATION_CATEGORY06.Contains(queryStr)
								|| a.LOCATION_CATEGORY07.Contains(queryStr)
								|| a.LOCATION_CATEGORY08.Contains(queryStr)
								
								
								
								
								|| a.LOCATING_ZONE.Contains(queryStr)
								|| a.ALLOCATION_ZONE.Contains(queryStr)
								|| a.WORK_ZONE.Contains(queryStr)
								|| a.MAX_LPNS.Contains(queryStr)
								
								|| a.EDITABLE_INVENTORY_STATUS.Contains(queryStr)
								);
			}else{
				queryData = m_Rep.GetList(where);
			}
			
		  
			pager.totalRows = queryData.Count();
			//排序
			queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
			return CreateModelList(ref queryData);
		}
		public virtual List<Apps.Models.SCV.Sys.LOCATION_MODEL> CreateModelList(ref IQueryable<Apps.Models.LOCATION> queryData)
		{

			List<Apps.Models.SCV.Sys.LOCATION_MODEL> modelList = (from r in queryData
											  select new Apps.Models.SCV.Sys.LOCATION_MODEL
											  {
													INTERNAL_LOC_NUM = r.INTERNAL_LOC_NUM,
													LOCATION1 = r.LOCATION1,
													WAREHOUSE = r.WAREHOUSE,
													ZONE = r.ZONE,
													LOCATION_CLASS = r.LOCATION_CLASS,
													LOCATION_TYPE = r.LOCATION_TYPE,
													MULTI_ITEM = r.MULTI_ITEM,
													TRACK_LPN = r.TRACK_LPN,
													LOCATION_STS = r.LOCATION_STS,
													LAST_CYCLE_COUNT_DATE = r.LAST_CYCLE_COUNT_DATE,
													ACTIVE = r.ACTIVE,
													USER_STAMP = r.USER_STAMP,
													DATE_TIME_STAMP = r.DATE_TIME_STAMP,
													TEMPLATE_FIELD1 = r.TEMPLATE_FIELD1,
													TEMPLATE_FIELD2 = r.TEMPLATE_FIELD2,
													TEMPLATE_FIELD3 = r.TEMPLATE_FIELD3,
													TEMPLATE_FIELD4 = r.TEMPLATE_FIELD4,
													TEMPLATE_FIELD5 = r.TEMPLATE_FIELD5,
													MIN_QTY_UM = r.MIN_QTY_UM,
													LAST_ACTIVITY_DATE_TIME = r.LAST_ACTIVITY_DATE_TIME,
													USER_DEF1 = r.USER_DEF1,
													USER_DEF2 = r.USER_DEF2,
													USER_DEF3 = r.USER_DEF3,
													USER_DEF4 = r.USER_DEF4,
													USER_DEF5 = r.USER_DEF5,
													USER_DEF6 = r.USER_DEF6,
													USER_DEF7 = r.USER_DEF7,
													USER_DEF8 = r.USER_DEF8,
													CHECK_DIGIT = r.CHECK_DIGIT,
													MAX_LOTS = r.MAX_LOTS,
													LOCATION_SUB_CLASS = r.LOCATION_SUB_CLASS,
													LOCATION_CATEGORY01 = r.LOCATION_CATEGORY01,
													LOCATION_CATEGORY02 = r.LOCATION_CATEGORY02,
													LOCATION_CATEGORY03 = r.LOCATION_CATEGORY03,
													LOCATION_CATEGORY04 = r.LOCATION_CATEGORY04,
													LOCATION_CATEGORY05 = r.LOCATION_CATEGORY05,
													LOCATION_CATEGORY06 = r.LOCATION_CATEGORY06,
													LOCATION_CATEGORY07 = r.LOCATION_CATEGORY07,
													LOCATION_CATEGORY08 = r.LOCATION_CATEGORY08,
													PUTAWAY_SEQ = r.PUTAWAY_SEQ,
													PICK_SEQ = r.PICK_SEQ,
													REPLENISH_SEQ = r.REPLENISH_SEQ,
													CYCLE_COUNT_SEQ = r.CYCLE_COUNT_SEQ,
													LOCATING_ZONE = r.LOCATING_ZONE,
													ALLOCATION_ZONE = r.ALLOCATION_ZONE,
													WORK_ZONE = r.WORK_ZONE,
													MAX_LPNS = r.MAX_LPNS,
													BIG_ZONE = r.BIG_ZONE,
													EDITABLE_INVENTORY_STATUS = r.EDITABLE_INVENTORY_STATUS,
          
											  }).ToList();

			return modelList;
		}

		public virtual void Create(ref ValidationErrors errors, Apps.Models.SCV.Sys.LOCATION_MODEL model)
		{
				Apps.Models.LOCATION entity = m_Rep.GetById(model.INTERNAL_LOC_NUM);
				if (entity != null)
				{
					errors.Add(Resource.PrimaryRepeat);
					return;
				}
				entity = new Apps.Models.LOCATION();
			   				entity.INTERNAL_LOC_NUM = model.INTERNAL_LOC_NUM;
				entity.LOCATION1 = model.LOCATION1;
				entity.WAREHOUSE = model.WAREHOUSE;
				entity.ZONE = model.ZONE;
				entity.LOCATION_CLASS = model.LOCATION_CLASS;
				entity.LOCATION_TYPE = model.LOCATION_TYPE;
				entity.MULTI_ITEM = model.MULTI_ITEM;
				entity.TRACK_LPN = model.TRACK_LPN;
				entity.LOCATION_STS = model.LOCATION_STS;
				entity.LAST_CYCLE_COUNT_DATE = model.LAST_CYCLE_COUNT_DATE;
				entity.ACTIVE = model.ACTIVE;
				entity.USER_STAMP = model.USER_STAMP;
				entity.DATE_TIME_STAMP = model.DATE_TIME_STAMP;
				entity.TEMPLATE_FIELD1 = model.TEMPLATE_FIELD1;
				entity.TEMPLATE_FIELD2 = model.TEMPLATE_FIELD2;
				entity.TEMPLATE_FIELD3 = model.TEMPLATE_FIELD3;
				entity.TEMPLATE_FIELD4 = model.TEMPLATE_FIELD4;
				entity.TEMPLATE_FIELD5 = model.TEMPLATE_FIELD5;
				entity.MIN_QTY_UM = model.MIN_QTY_UM;
				entity.LAST_ACTIVITY_DATE_TIME = model.LAST_ACTIVITY_DATE_TIME;
				entity.USER_DEF1 = model.USER_DEF1;
				entity.USER_DEF2 = model.USER_DEF2;
				entity.USER_DEF3 = model.USER_DEF3;
				entity.USER_DEF4 = model.USER_DEF4;
				entity.USER_DEF5 = model.USER_DEF5;
				entity.USER_DEF6 = model.USER_DEF6;
				entity.USER_DEF7 = model.USER_DEF7;
				entity.USER_DEF8 = model.USER_DEF8;
				entity.CHECK_DIGIT = model.CHECK_DIGIT;
				entity.MAX_LOTS = model.MAX_LOTS;
				entity.LOCATION_SUB_CLASS = model.LOCATION_SUB_CLASS;
				entity.LOCATION_CATEGORY01 = model.LOCATION_CATEGORY01;
				entity.LOCATION_CATEGORY02 = model.LOCATION_CATEGORY02;
				entity.LOCATION_CATEGORY03 = model.LOCATION_CATEGORY03;
				entity.LOCATION_CATEGORY04 = model.LOCATION_CATEGORY04;
				entity.LOCATION_CATEGORY05 = model.LOCATION_CATEGORY05;
				entity.LOCATION_CATEGORY06 = model.LOCATION_CATEGORY06;
				entity.LOCATION_CATEGORY07 = model.LOCATION_CATEGORY07;
				entity.LOCATION_CATEGORY08 = model.LOCATION_CATEGORY08;
				entity.PUTAWAY_SEQ = model.PUTAWAY_SEQ;
				entity.PICK_SEQ = model.PICK_SEQ;
				entity.REPLENISH_SEQ = model.REPLENISH_SEQ;
				entity.CYCLE_COUNT_SEQ = model.CYCLE_COUNT_SEQ;
				entity.LOCATING_ZONE = model.LOCATING_ZONE;
				entity.ALLOCATION_ZONE = model.ALLOCATION_ZONE;
				entity.WORK_ZONE = model.WORK_ZONE;
				entity.MAX_LPNS = model.MAX_LPNS;
				entity.BIG_ZONE = model.BIG_ZONE;
				entity.EDITABLE_INVENTORY_STATUS = model.EDITABLE_INVENTORY_STATUS;
  
				m_Rep.Create(entity);
		}



		 public virtual void RemoveById(ref ValidationErrors errors, string id)
		{
			
				m_Rep.RemoveById(id);
			
		}

		public virtual void RemoveByIds(ref ValidationErrors errors, string[] deleteCollection)
		{
				if (deleteCollection != null)
				{
				   //事务批量删除
				   // using (TransactionScope transactionScope = new TransactionScope())
				   // {
				   //     if (m_Rep.Delete(deleteCollection) == deleteCollection.Length)
				   //     {
				   //         transactionScope.Complete();
				   //         return true;
				   //     }
				   //    else
				   //     {
				   //         Transaction.Current.Rollback();
				   //         return false;
				   //     }
				   // }
				   m_Rep.RemoveById(deleteCollection);
				}
		}

		
	   

		public virtual void Modify(ref ValidationErrors errors, Apps.Models.SCV.Sys.LOCATION_MODEL model,params string[] updateProperties)
		{
				Apps.Models.LOCATION entity = m_Rep.GetById(model.INTERNAL_LOC_NUM);
				if (entity == null)
				{
					errors.Add(Resource.Disable);
					return;
				}
							  				if (updateProperties.Count() <= 0){
										entity.INTERNAL_LOC_NUM = model.INTERNAL_LOC_NUM;
											entity.LOCATION1 = model.LOCATION1;
											entity.WAREHOUSE = model.WAREHOUSE;
											entity.ZONE = model.ZONE;
											entity.LOCATION_CLASS = model.LOCATION_CLASS;
											entity.LOCATION_TYPE = model.LOCATION_TYPE;
											entity.MULTI_ITEM = model.MULTI_ITEM;
											entity.TRACK_LPN = model.TRACK_LPN;
											entity.LOCATION_STS = model.LOCATION_STS;
											entity.LAST_CYCLE_COUNT_DATE = model.LAST_CYCLE_COUNT_DATE;
											entity.ACTIVE = model.ACTIVE;
											entity.USER_STAMP = model.USER_STAMP;
											entity.DATE_TIME_STAMP = model.DATE_TIME_STAMP;
											entity.TEMPLATE_FIELD1 = model.TEMPLATE_FIELD1;
											entity.TEMPLATE_FIELD2 = model.TEMPLATE_FIELD2;
											entity.TEMPLATE_FIELD3 = model.TEMPLATE_FIELD3;
											entity.TEMPLATE_FIELD4 = model.TEMPLATE_FIELD4;
											entity.TEMPLATE_FIELD5 = model.TEMPLATE_FIELD5;
											entity.MIN_QTY_UM = model.MIN_QTY_UM;
											entity.LAST_ACTIVITY_DATE_TIME = model.LAST_ACTIVITY_DATE_TIME;
											entity.USER_DEF1 = model.USER_DEF1;
											entity.USER_DEF2 = model.USER_DEF2;
											entity.USER_DEF3 = model.USER_DEF3;
											entity.USER_DEF4 = model.USER_DEF4;
											entity.USER_DEF5 = model.USER_DEF5;
											entity.USER_DEF6 = model.USER_DEF6;
											entity.USER_DEF7 = model.USER_DEF7;
											entity.USER_DEF8 = model.USER_DEF8;
											entity.CHECK_DIGIT = model.CHECK_DIGIT;
											entity.MAX_LOTS = model.MAX_LOTS;
											entity.LOCATION_SUB_CLASS = model.LOCATION_SUB_CLASS;
											entity.LOCATION_CATEGORY01 = model.LOCATION_CATEGORY01;
											entity.LOCATION_CATEGORY02 = model.LOCATION_CATEGORY02;
											entity.LOCATION_CATEGORY03 = model.LOCATION_CATEGORY03;
											entity.LOCATION_CATEGORY04 = model.LOCATION_CATEGORY04;
											entity.LOCATION_CATEGORY05 = model.LOCATION_CATEGORY05;
											entity.LOCATION_CATEGORY06 = model.LOCATION_CATEGORY06;
											entity.LOCATION_CATEGORY07 = model.LOCATION_CATEGORY07;
											entity.LOCATION_CATEGORY08 = model.LOCATION_CATEGORY08;
											entity.PUTAWAY_SEQ = model.PUTAWAY_SEQ;
											entity.PICK_SEQ = model.PICK_SEQ;
											entity.REPLENISH_SEQ = model.REPLENISH_SEQ;
											entity.CYCLE_COUNT_SEQ = model.CYCLE_COUNT_SEQ;
											entity.LOCATING_ZONE = model.LOCATING_ZONE;
											entity.ALLOCATION_ZONE = model.ALLOCATION_ZONE;
											entity.WORK_ZONE = model.WORK_ZONE;
											entity.MAX_LPNS = model.MAX_LPNS;
											entity.BIG_ZONE = model.BIG_ZONE;
											entity.EDITABLE_INVENTORY_STATUS = model.EDITABLE_INVENTORY_STATUS;
									}else{
					
						Type type = typeof(Apps.Models.SCV.Sys.LOCATION_MODEL);
						Type typeE = typeof(Apps.Models.LOCATION);
						foreach (var item in updateProperties) {
						System.Reflection.PropertyInfo pi = type.GetProperty(item);
						System.Reflection.PropertyInfo piE = typeE.GetProperty(item);
						piE.SetValue(entity,pi.GetValue(model),null);
				}
				}
				 

				m_Rep.Modify(entity,updateProperties);
		}

	  

		public virtual Apps.Models.SCV.Sys.LOCATION_MODEL GetById(string id)
		{
			Apps.Models.LOCATION entity = m_Rep.GetById(id);
			if (entity!=null)
			{
				//LOCATION entity = m_Rep.GetById(id);
				Apps.Models.SCV.Sys.LOCATION_MODEL model = new Apps.Models.SCV.Sys.LOCATION_MODEL();
							  				model.INTERNAL_LOC_NUM = entity.INTERNAL_LOC_NUM;
				model.LOCATION1 = entity.LOCATION1;
				model.WAREHOUSE = entity.WAREHOUSE;
				model.ZONE = entity.ZONE;
				model.LOCATION_CLASS = entity.LOCATION_CLASS;
				model.LOCATION_TYPE = entity.LOCATION_TYPE;
				model.MULTI_ITEM = entity.MULTI_ITEM;
				model.TRACK_LPN = entity.TRACK_LPN;
				model.LOCATION_STS = entity.LOCATION_STS;
				model.LAST_CYCLE_COUNT_DATE = entity.LAST_CYCLE_COUNT_DATE;
				model.ACTIVE = entity.ACTIVE;
				model.USER_STAMP = entity.USER_STAMP;
				model.DATE_TIME_STAMP = entity.DATE_TIME_STAMP;
				model.TEMPLATE_FIELD1 = entity.TEMPLATE_FIELD1;
				model.TEMPLATE_FIELD2 = entity.TEMPLATE_FIELD2;
				model.TEMPLATE_FIELD3 = entity.TEMPLATE_FIELD3;
				model.TEMPLATE_FIELD4 = entity.TEMPLATE_FIELD4;
				model.TEMPLATE_FIELD5 = entity.TEMPLATE_FIELD5;
				model.MIN_QTY_UM = entity.MIN_QTY_UM;
				model.LAST_ACTIVITY_DATE_TIME = entity.LAST_ACTIVITY_DATE_TIME;
				model.USER_DEF1 = entity.USER_DEF1;
				model.USER_DEF2 = entity.USER_DEF2;
				model.USER_DEF3 = entity.USER_DEF3;
				model.USER_DEF4 = entity.USER_DEF4;
				model.USER_DEF5 = entity.USER_DEF5;
				model.USER_DEF6 = entity.USER_DEF6;
				model.USER_DEF7 = entity.USER_DEF7;
				model.USER_DEF8 = entity.USER_DEF8;
				model.CHECK_DIGIT = entity.CHECK_DIGIT;
				model.MAX_LOTS = entity.MAX_LOTS;
				model.LOCATION_SUB_CLASS = entity.LOCATION_SUB_CLASS;
				model.LOCATION_CATEGORY01 = entity.LOCATION_CATEGORY01;
				model.LOCATION_CATEGORY02 = entity.LOCATION_CATEGORY02;
				model.LOCATION_CATEGORY03 = entity.LOCATION_CATEGORY03;
				model.LOCATION_CATEGORY04 = entity.LOCATION_CATEGORY04;
				model.LOCATION_CATEGORY05 = entity.LOCATION_CATEGORY05;
				model.LOCATION_CATEGORY06 = entity.LOCATION_CATEGORY06;
				model.LOCATION_CATEGORY07 = entity.LOCATION_CATEGORY07;
				model.LOCATION_CATEGORY08 = entity.LOCATION_CATEGORY08;
				model.PUTAWAY_SEQ = entity.PUTAWAY_SEQ;
				model.PICK_SEQ = entity.PICK_SEQ;
				model.REPLENISH_SEQ = entity.REPLENISH_SEQ;
				model.CYCLE_COUNT_SEQ = entity.CYCLE_COUNT_SEQ;
				model.LOCATING_ZONE = entity.LOCATING_ZONE;
				model.ALLOCATION_ZONE = entity.ALLOCATION_ZONE;
				model.WORK_ZONE = entity.WORK_ZONE;
				model.MAX_LPNS = entity.MAX_LPNS;
				model.BIG_ZONE = entity.BIG_ZONE;
				model.EDITABLE_INVENTORY_STATUS = entity.EDITABLE_INVENTORY_STATUS;
 
				return model;
			}
			else
			{
				return null;
			}
		}

	 

	}
}
