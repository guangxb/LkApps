//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Apps.Models;
using Apps.Common;
using Microsoft.Practices.Unity;
using System.Transactions;
using Apps.Locale;
using System.Linq.Expressions;
namespace Apps.Service.SCV.SHIPMENT
{
	public class Virtual_SHIPMENT_EXPRESS_SERVICE
	{

		public Apps.IRepository.SCV.ISCVDBSession SCVDBSession{
			 get
			{
				return Service.SCV.SCVDBSessionFactory.GetDBSession();
			}
		}
	   
		public Apps.IRepository.SCV.SHIPMENT.ISHIPMENT_EXPRESS_REPOSITORY m_Rep{
			 get
			{
				return SCVDBSession.SHIPMENT_EXPRESS;
			}
		}
		

		public virtual List<Apps.Models.SCV.SHIPMENT.SHIPMENT_EXPRESS_MODEL> GetList(Expression<Func<Apps.Models.SHIPMENT_EXPRESS, bool>> where = null){
		
				IQueryable<Apps.Models.SHIPMENT_EXPRESS> queryData = m_Rep.GetList(where);
				return CreateModelList(ref queryData);
		}

		public virtual List<Apps.Models.SCV.SHIPMENT.SHIPMENT_EXPRESS_MODEL> GetListSort<TKey>(Expression<Func<Apps.Models.SHIPMENT_EXPRESS, bool>> where,Expression<Func<Apps.Models.SHIPMENT_EXPRESS, TKey>>orderBy, bool isAsc = true){
		
				IQueryable<Apps.Models.SHIPMENT_EXPRESS> queryData = m_Rep.GetListSort(where, orderBy, isAsc);
				return CreateModelList(ref queryData);
		}

		public virtual List<Apps.Models.SCV.SHIPMENT.SHIPMENT_EXPRESS_MODEL> GetList(ref GridPager pager, string queryStr,Expression<Func<Apps.Models.SHIPMENT_EXPRESS, bool>> where = null)
		{

			IQueryable<Apps.Models.SHIPMENT_EXPRESS> queryData;
			
			if (!string.IsNullOrWhiteSpace(queryStr))
			{
				queryData = m_Rep.GetList(where
								
								
								,a=>a.SHIPMENT_ID.Contains(queryStr)
								|| a.WAREHOUSE.Contains(queryStr)
								|| a.COMPANY.Contains(queryStr)
								
								
								|| a.CARRIER.Contains(queryStr)
								|| a.EXPRESS_ID.Contains(queryStr)
								
								
								|| a.USER_STAMP.Contains(queryStr)
								|| a.USER_DEF1.Contains(queryStr)
								|| a.USER_DEF2.Contains(queryStr)
								|| a.USER_DEF3.Contains(queryStr)
								|| a.USER_DEF4.Contains(queryStr)
								|| a.USER_DEF5.Contains(queryStr)
								|| a.USER_DEF6.Contains(queryStr)
								|| a.USER_DEF7.Contains(queryStr)
								|| a.USER_DEF8.Contains(queryStr)
								|| a.CONTAINER_ID.Contains(queryStr)
								
								
								);
			}else{
				queryData = m_Rep.GetList(where);
			}
			
		  
			pager.totalRows = queryData.Count();
			//排序
			queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
			return CreateModelList(ref queryData);
		}
		public virtual List<Apps.Models.SCV.SHIPMENT.SHIPMENT_EXPRESS_MODEL> CreateModelList(ref IQueryable<Apps.Models.SHIPMENT_EXPRESS> queryData)
		{

			List<Apps.Models.SCV.SHIPMENT.SHIPMENT_EXPRESS_MODEL> modelList = (from r in queryData
											  select new Apps.Models.SCV.SHIPMENT.SHIPMENT_EXPRESS_MODEL
											  {
													INTERNAL_NUM = r.INTERNAL_NUM,
													INTERNAL_SHIPMENT_NUM = r.INTERNAL_SHIPMENT_NUM,
													SHIPMENT_ID = r.SHIPMENT_ID,
													WAREHOUSE = r.WAREHOUSE,
													COMPANY = r.COMPANY,
													INTERNAL_WAVE_NUM = r.INTERNAL_WAVE_NUM,
													INTERNAL_LOAD_NUM = r.INTERNAL_LOAD_NUM,
													CARRIER = r.CARRIER,
													EXPRESS_ID = r.EXPRESS_ID,
													STATUS = r.STATUS,
													DATE_TIME_STAMP = r.DATE_TIME_STAMP,
													USER_STAMP = r.USER_STAMP,
													USER_DEF1 = r.USER_DEF1,
													USER_DEF2 = r.USER_DEF2,
													USER_DEF3 = r.USER_DEF3,
													USER_DEF4 = r.USER_DEF4,
													USER_DEF5 = r.USER_DEF5,
													USER_DEF6 = r.USER_DEF6,
													USER_DEF7 = r.USER_DEF7,
													USER_DEF8 = r.USER_DEF8,
													CONTAINER_ID = r.CONTAINER_ID,
													INTERNAL_CONTAINER_NUM = r.INTERNAL_CONTAINER_NUM,
													TOTAL_WEIGHT = r.TOTAL_WEIGHT,
          
											  }).ToList();

			return modelList;
		}

		public virtual void Create(ref ValidationErrors errors, Apps.Models.SCV.SHIPMENT.SHIPMENT_EXPRESS_MODEL model)
		{
				Apps.Models.SHIPMENT_EXPRESS entity = m_Rep.GetById(model.INTERNAL_NUM);
				if (entity != null)
				{
					errors.Add(Resource.PrimaryRepeat);
					return;
				}
				entity = new Apps.Models.SHIPMENT_EXPRESS();
			   				entity.INTERNAL_NUM = model.INTERNAL_NUM;
				entity.INTERNAL_SHIPMENT_NUM = model.INTERNAL_SHIPMENT_NUM;
				entity.SHIPMENT_ID = model.SHIPMENT_ID;
				entity.WAREHOUSE = model.WAREHOUSE;
				entity.COMPANY = model.COMPANY;
				entity.INTERNAL_WAVE_NUM = model.INTERNAL_WAVE_NUM;
				entity.INTERNAL_LOAD_NUM = model.INTERNAL_LOAD_NUM;
				entity.CARRIER = model.CARRIER;
				entity.EXPRESS_ID = model.EXPRESS_ID;
				entity.STATUS = model.STATUS;
				entity.DATE_TIME_STAMP = model.DATE_TIME_STAMP;
				entity.USER_STAMP = model.USER_STAMP;
				entity.USER_DEF1 = model.USER_DEF1;
				entity.USER_DEF2 = model.USER_DEF2;
				entity.USER_DEF3 = model.USER_DEF3;
				entity.USER_DEF4 = model.USER_DEF4;
				entity.USER_DEF5 = model.USER_DEF5;
				entity.USER_DEF6 = model.USER_DEF6;
				entity.USER_DEF7 = model.USER_DEF7;
				entity.USER_DEF8 = model.USER_DEF8;
				entity.CONTAINER_ID = model.CONTAINER_ID;
				entity.INTERNAL_CONTAINER_NUM = model.INTERNAL_CONTAINER_NUM;
				entity.TOTAL_WEIGHT = model.TOTAL_WEIGHT;
  
				m_Rep.Create(entity);
		}



		 public virtual void RemoveById(ref ValidationErrors errors, string id)
		{
			
				m_Rep.RemoveById(id);
			
		}

		public virtual void RemoveByIds(ref ValidationErrors errors, string[] deleteCollection)
		{
				if (deleteCollection != null)
				{
				   //事务批量删除
				   // using (TransactionScope transactionScope = new TransactionScope())
				   // {
				   //     if (m_Rep.Delete(deleteCollection) == deleteCollection.Length)
				   //     {
				   //         transactionScope.Complete();
				   //         return true;
				   //     }
				   //    else
				   //     {
				   //         Transaction.Current.Rollback();
				   //         return false;
				   //     }
				   // }
				   m_Rep.RemoveById(deleteCollection);
				}
		}

		
	   

		public virtual void Modify(ref ValidationErrors errors, Apps.Models.SCV.SHIPMENT.SHIPMENT_EXPRESS_MODEL model,params string[] updateProperties)
		{
				Apps.Models.SHIPMENT_EXPRESS entity = m_Rep.GetById(model.INTERNAL_NUM);
				if (entity == null)
				{
					errors.Add(Resource.Disable);
					return;
				}
							  				if (updateProperties.Count() <= 0){
										entity.INTERNAL_NUM = model.INTERNAL_NUM;
											entity.INTERNAL_SHIPMENT_NUM = model.INTERNAL_SHIPMENT_NUM;
											entity.SHIPMENT_ID = model.SHIPMENT_ID;
											entity.WAREHOUSE = model.WAREHOUSE;
											entity.COMPANY = model.COMPANY;
											entity.INTERNAL_WAVE_NUM = model.INTERNAL_WAVE_NUM;
											entity.INTERNAL_LOAD_NUM = model.INTERNAL_LOAD_NUM;
											entity.CARRIER = model.CARRIER;
											entity.EXPRESS_ID = model.EXPRESS_ID;
											entity.STATUS = model.STATUS;
											entity.DATE_TIME_STAMP = model.DATE_TIME_STAMP;
											entity.USER_STAMP = model.USER_STAMP;
											entity.USER_DEF1 = model.USER_DEF1;
											entity.USER_DEF2 = model.USER_DEF2;
											entity.USER_DEF3 = model.USER_DEF3;
											entity.USER_DEF4 = model.USER_DEF4;
											entity.USER_DEF5 = model.USER_DEF5;
											entity.USER_DEF6 = model.USER_DEF6;
											entity.USER_DEF7 = model.USER_DEF7;
											entity.USER_DEF8 = model.USER_DEF8;
											entity.CONTAINER_ID = model.CONTAINER_ID;
											entity.INTERNAL_CONTAINER_NUM = model.INTERNAL_CONTAINER_NUM;
											entity.TOTAL_WEIGHT = model.TOTAL_WEIGHT;
									}else{
					
						Type type = typeof(Apps.Models.SCV.SHIPMENT.SHIPMENT_EXPRESS_MODEL);
						Type typeE = typeof(Apps.Models.SHIPMENT_EXPRESS);
						foreach (var item in updateProperties) {
						System.Reflection.PropertyInfo pi = type.GetProperty(item);
						System.Reflection.PropertyInfo piE = typeE.GetProperty(item);
						piE.SetValue(entity,pi.GetValue(model),null);
				}
				}
				 

				m_Rep.Modify(entity,updateProperties);
		}

	  

		public virtual Apps.Models.SCV.SHIPMENT.SHIPMENT_EXPRESS_MODEL GetById(string id)
		{
			Apps.Models.SHIPMENT_EXPRESS entity = m_Rep.GetById(id);
			if (entity!=null)
			{
				//SHIPMENT_EXPRESS entity = m_Rep.GetById(id);
				Apps.Models.SCV.SHIPMENT.SHIPMENT_EXPRESS_MODEL model = new Apps.Models.SCV.SHIPMENT.SHIPMENT_EXPRESS_MODEL();
							  				model.INTERNAL_NUM = entity.INTERNAL_NUM;
				model.INTERNAL_SHIPMENT_NUM = entity.INTERNAL_SHIPMENT_NUM;
				model.SHIPMENT_ID = entity.SHIPMENT_ID;
				model.WAREHOUSE = entity.WAREHOUSE;
				model.COMPANY = entity.COMPANY;
				model.INTERNAL_WAVE_NUM = entity.INTERNAL_WAVE_NUM;
				model.INTERNAL_LOAD_NUM = entity.INTERNAL_LOAD_NUM;
				model.CARRIER = entity.CARRIER;
				model.EXPRESS_ID = entity.EXPRESS_ID;
				model.STATUS = entity.STATUS;
				model.DATE_TIME_STAMP = entity.DATE_TIME_STAMP;
				model.USER_STAMP = entity.USER_STAMP;
				model.USER_DEF1 = entity.USER_DEF1;
				model.USER_DEF2 = entity.USER_DEF2;
				model.USER_DEF3 = entity.USER_DEF3;
				model.USER_DEF4 = entity.USER_DEF4;
				model.USER_DEF5 = entity.USER_DEF5;
				model.USER_DEF6 = entity.USER_DEF6;
				model.USER_DEF7 = entity.USER_DEF7;
				model.USER_DEF8 = entity.USER_DEF8;
				model.CONTAINER_ID = entity.CONTAINER_ID;
				model.INTERNAL_CONTAINER_NUM = entity.INTERNAL_CONTAINER_NUM;
				model.TOTAL_WEIGHT = entity.TOTAL_WEIGHT;
 
				return model;
			}
			else
			{
				return null;
			}
		}

	 

	}
}
