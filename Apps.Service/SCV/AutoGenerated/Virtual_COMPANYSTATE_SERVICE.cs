//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Apps.Models;
using Apps.Common;
using Microsoft.Practices.Unity;
using System.Transactions;
using Apps.Locale;
using System.Linq.Expressions;
namespace Apps.Service.SCV.Sys
{
	public class Virtual_COMPANYSTATE_SERVICE
	{

		public Apps.IRepository.SCV.ISCVDBSession SCVDBSession{
			 get
			{
				return Service.SCV.SCVDBSessionFactory.GetDBSession();
			}
		}
	   
		public Apps.IRepository.SCV.Sys.ICOMPANYSTATE_REPOSITORY m_Rep{
			 get
			{
				return SCVDBSession.COMPANYSTATE;
			}
		}
		

		public virtual List<Apps.Models.SCV.Sys.COMPANYSTATE_MODEL> GetList(Expression<Func<Apps.Models.COMPANYSTATE, bool>> where = null){
		
				IQueryable<Apps.Models.COMPANYSTATE> queryData = m_Rep.GetList(where);
				return CreateModelList(ref queryData);
		}

		public virtual List<Apps.Models.SCV.Sys.COMPANYSTATE_MODEL> GetListSort<TKey>(Expression<Func<Apps.Models.COMPANYSTATE, bool>> where,Expression<Func<Apps.Models.COMPANYSTATE, TKey>>orderBy, bool isAsc = true){
		
				IQueryable<Apps.Models.COMPANYSTATE> queryData = m_Rep.GetListSort(where, orderBy, isAsc);
				return CreateModelList(ref queryData);
		}

		public virtual List<Apps.Models.SCV.Sys.COMPANYSTATE_MODEL> GetList(ref GridPager pager, string queryStr,Expression<Func<Apps.Models.COMPANYSTATE, bool>> where = null)
		{

			IQueryable<Apps.Models.COMPANYSTATE> queryData;
			
			if (!string.IsNullOrWhiteSpace(queryStr))
			{
				queryData = m_Rep.GetList(where
								,a=>a.COMPANY.Contains(queryStr)
								
								|| a.USER_DEF1.Contains(queryStr)
								|| a.USER_DEF2.Contains(queryStr)
								|| a.USER_DEF3.Contains(queryStr)
								|| a.USER_DEF4.Contains(queryStr)
								|| a.USER_DEF5.Contains(queryStr)
								|| a.USER_DEF6.Contains(queryStr)
								|| a.USER_DEF7.Contains(queryStr)
								|| a.USER_DEF8.Contains(queryStr)
								|| a.USER_DEF9.Contains(queryStr)
								|| a.USER_DEF10.Contains(queryStr)
								|| a.USER_DEF11.Contains(queryStr)
								|| a.USER_DEF12.Contains(queryStr)
								|| a.USER_DEF13.Contains(queryStr)
								|| a.USER_DEF14.Contains(queryStr)
								|| a.USER_DEF15.Contains(queryStr)
								|| a.USER_DEF16.Contains(queryStr)
								|| a.USER_DEF17.Contains(queryStr)
								|| a.USER_DEF18.Contains(queryStr)
								|| a.USER_DEF19.Contains(queryStr)
								|| a.USER_DEF20.Contains(queryStr)
								);
			}else{
				queryData = m_Rep.GetList(where);
			}
			
		  
			pager.totalRows = queryData.Count();
			//排序
			queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
			return CreateModelList(ref queryData);
		}
		public virtual List<Apps.Models.SCV.Sys.COMPANYSTATE_MODEL> CreateModelList(ref IQueryable<Apps.Models.COMPANYSTATE> queryData)
		{

			List<Apps.Models.SCV.Sys.COMPANYSTATE_MODEL> modelList = (from r in queryData
											  select new Apps.Models.SCV.Sys.COMPANYSTATE_MODEL
											  {
													COMPANY = r.COMPANY,
													ACTIVE = r.ACTIVE,
													USER_DEF1 = r.USER_DEF1,
													USER_DEF2 = r.USER_DEF2,
													USER_DEF3 = r.USER_DEF3,
													USER_DEF4 = r.USER_DEF4,
													USER_DEF5 = r.USER_DEF5,
													USER_DEF6 = r.USER_DEF6,
													USER_DEF7 = r.USER_DEF7,
													USER_DEF8 = r.USER_DEF8,
													USER_DEF9 = r.USER_DEF9,
													USER_DEF10 = r.USER_DEF10,
													USER_DEF11 = r.USER_DEF11,
													USER_DEF12 = r.USER_DEF12,
													USER_DEF13 = r.USER_DEF13,
													USER_DEF14 = r.USER_DEF14,
													USER_DEF15 = r.USER_DEF15,
													USER_DEF16 = r.USER_DEF16,
													USER_DEF17 = r.USER_DEF17,
													USER_DEF18 = r.USER_DEF18,
													USER_DEF19 = r.USER_DEF19,
													USER_DEF20 = r.USER_DEF20,
          
											  }).ToList();

			return modelList;
		}

		public virtual void Create(ref ValidationErrors errors, Apps.Models.SCV.Sys.COMPANYSTATE_MODEL model)
		{
				Apps.Models.COMPANYSTATE entity = m_Rep.GetById(model.COMPANY);
				if (entity != null)
				{
					errors.Add(Resource.PrimaryRepeat);
					return;
				}
				entity = new Apps.Models.COMPANYSTATE();
			   				entity.COMPANY = model.COMPANY;
				entity.ACTIVE = model.ACTIVE;
				entity.USER_DEF1 = model.USER_DEF1;
				entity.USER_DEF2 = model.USER_DEF2;
				entity.USER_DEF3 = model.USER_DEF3;
				entity.USER_DEF4 = model.USER_DEF4;
				entity.USER_DEF5 = model.USER_DEF5;
				entity.USER_DEF6 = model.USER_DEF6;
				entity.USER_DEF7 = model.USER_DEF7;
				entity.USER_DEF8 = model.USER_DEF8;
				entity.USER_DEF9 = model.USER_DEF9;
				entity.USER_DEF10 = model.USER_DEF10;
				entity.USER_DEF11 = model.USER_DEF11;
				entity.USER_DEF12 = model.USER_DEF12;
				entity.USER_DEF13 = model.USER_DEF13;
				entity.USER_DEF14 = model.USER_DEF14;
				entity.USER_DEF15 = model.USER_DEF15;
				entity.USER_DEF16 = model.USER_DEF16;
				entity.USER_DEF17 = model.USER_DEF17;
				entity.USER_DEF18 = model.USER_DEF18;
				entity.USER_DEF19 = model.USER_DEF19;
				entity.USER_DEF20 = model.USER_DEF20;
  
				m_Rep.Create(entity);
		}



		 public virtual void RemoveById(ref ValidationErrors errors, string id)
		{
			
				m_Rep.RemoveById(id);
			
		}

		public virtual void RemoveByIds(ref ValidationErrors errors, string[] deleteCollection)
		{
				if (deleteCollection != null)
				{
				   //事务批量删除
				   // using (TransactionScope transactionScope = new TransactionScope())
				   // {
				   //     if (m_Rep.Delete(deleteCollection) == deleteCollection.Length)
				   //     {
				   //         transactionScope.Complete();
				   //         return true;
				   //     }
				   //    else
				   //     {
				   //         Transaction.Current.Rollback();
				   //         return false;
				   //     }
				   // }
				   m_Rep.RemoveById(deleteCollection);
				}
		}

		
	   

		public virtual void Modify(ref ValidationErrors errors, Apps.Models.SCV.Sys.COMPANYSTATE_MODEL model,params string[] updateProperties)
		{
				Apps.Models.COMPANYSTATE entity = m_Rep.GetById(model.COMPANY);
				if (entity == null)
				{
					errors.Add(Resource.Disable);
					return;
				}
							  				if (updateProperties.Count() <= 0){
										entity.COMPANY = model.COMPANY;
											entity.ACTIVE = model.ACTIVE;
											entity.USER_DEF1 = model.USER_DEF1;
											entity.USER_DEF2 = model.USER_DEF2;
											entity.USER_DEF3 = model.USER_DEF3;
											entity.USER_DEF4 = model.USER_DEF4;
											entity.USER_DEF5 = model.USER_DEF5;
											entity.USER_DEF6 = model.USER_DEF6;
											entity.USER_DEF7 = model.USER_DEF7;
											entity.USER_DEF8 = model.USER_DEF8;
											entity.USER_DEF9 = model.USER_DEF9;
											entity.USER_DEF10 = model.USER_DEF10;
											entity.USER_DEF11 = model.USER_DEF11;
											entity.USER_DEF12 = model.USER_DEF12;
											entity.USER_DEF13 = model.USER_DEF13;
											entity.USER_DEF14 = model.USER_DEF14;
											entity.USER_DEF15 = model.USER_DEF15;
											entity.USER_DEF16 = model.USER_DEF16;
											entity.USER_DEF17 = model.USER_DEF17;
											entity.USER_DEF18 = model.USER_DEF18;
											entity.USER_DEF19 = model.USER_DEF19;
											entity.USER_DEF20 = model.USER_DEF20;
									}else{
					
						Type type = typeof(Apps.Models.SCV.Sys.COMPANYSTATE_MODEL);
						Type typeE = typeof(Apps.Models.COMPANYSTATE);
						foreach (var item in updateProperties) {
						System.Reflection.PropertyInfo pi = type.GetProperty(item);
						System.Reflection.PropertyInfo piE = typeE.GetProperty(item);
						piE.SetValue(entity,pi.GetValue(model),null);
				}
				}
				 

				m_Rep.Modify(entity,updateProperties);
		}

	  

		public virtual Apps.Models.SCV.Sys.COMPANYSTATE_MODEL GetById(string id)
		{
			Apps.Models.COMPANYSTATE entity = m_Rep.GetById(id);
			if (entity!=null)
			{
				//COMPANYSTATE entity = m_Rep.GetById(id);
				Apps.Models.SCV.Sys.COMPANYSTATE_MODEL model = new Apps.Models.SCV.Sys.COMPANYSTATE_MODEL();
							  				model.COMPANY = entity.COMPANY;
				model.ACTIVE = entity.ACTIVE;
				model.USER_DEF1 = entity.USER_DEF1;
				model.USER_DEF2 = entity.USER_DEF2;
				model.USER_DEF3 = entity.USER_DEF3;
				model.USER_DEF4 = entity.USER_DEF4;
				model.USER_DEF5 = entity.USER_DEF5;
				model.USER_DEF6 = entity.USER_DEF6;
				model.USER_DEF7 = entity.USER_DEF7;
				model.USER_DEF8 = entity.USER_DEF8;
				model.USER_DEF9 = entity.USER_DEF9;
				model.USER_DEF10 = entity.USER_DEF10;
				model.USER_DEF11 = entity.USER_DEF11;
				model.USER_DEF12 = entity.USER_DEF12;
				model.USER_DEF13 = entity.USER_DEF13;
				model.USER_DEF14 = entity.USER_DEF14;
				model.USER_DEF15 = entity.USER_DEF15;
				model.USER_DEF16 = entity.USER_DEF16;
				model.USER_DEF17 = entity.USER_DEF17;
				model.USER_DEF18 = entity.USER_DEF18;
				model.USER_DEF19 = entity.USER_DEF19;
				model.USER_DEF20 = entity.USER_DEF20;
 
				return model;
			}
			else
			{
				return null;
			}
		}

	 

	}
}
