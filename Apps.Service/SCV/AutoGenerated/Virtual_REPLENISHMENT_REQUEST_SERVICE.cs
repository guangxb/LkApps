//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Apps.Models;
using Apps.Common;
using Microsoft.Practices.Unity;
using System.Transactions;
using Apps.Locale;
using System.Linq.Expressions;
namespace Apps.Service.SCV.REPLENISHMENT
{
	public class Virtual_REPLENISHMENT_REQUEST_SERVICE
	{

		public Apps.IRepository.SCV.ISCVDBSession SCVDBSession{
			 get
			{
				return Service.SCV.SCVDBSessionFactory.GetDBSession();
			}
		}
	   
		public Apps.IRepository.SCV.REPLENISHMENT.IREPLENISHMENT_REQUEST_REPOSITORY m_Rep{
			 get
			{
				return SCVDBSession.REPLENISHMENT_REQUEST;
			}
		}
		

		public virtual List<Apps.Models.SCV.REPLENISHMENT.REPLENISHMENT_REQUEST_MODEL> GetList(Expression<Func<Apps.Models.REPLENISHMENT_REQUEST, bool>> where = null){
		
				IQueryable<Apps.Models.REPLENISHMENT_REQUEST> queryData = m_Rep.GetList(where);
				return CreateModelList(ref queryData);
		}

		public virtual List<Apps.Models.SCV.REPLENISHMENT.REPLENISHMENT_REQUEST_MODEL> GetListSort<TKey>(Expression<Func<Apps.Models.REPLENISHMENT_REQUEST, bool>> where,Expression<Func<Apps.Models.REPLENISHMENT_REQUEST, TKey>>orderBy, bool isAsc = true){
		
				IQueryable<Apps.Models.REPLENISHMENT_REQUEST> queryData = m_Rep.GetListSort(where, orderBy, isAsc);
				return CreateModelList(ref queryData);
		}

		public virtual List<Apps.Models.SCV.REPLENISHMENT.REPLENISHMENT_REQUEST_MODEL> GetList(ref GridPager pager, string queryStr,Expression<Func<Apps.Models.REPLENISHMENT_REQUEST, bool>> where = null)
		{

			IQueryable<Apps.Models.REPLENISHMENT_REQUEST> queryData;
			
			if (!string.IsNullOrWhiteSpace(queryStr))
			{
				queryData = m_Rep.GetList(where
								
								,a=>a.COMPANY.Contains(queryStr)
								|| a.WAREHOUSE.Contains(queryStr)
								
								|| a.ITEM.Contains(queryStr)
								|| a.ITEM_DESC.Contains(queryStr)
								
								|| a.QUANTITY_UM.Contains(queryStr)
								
								|| a.ALLOCATION_ZONE.Contains(queryStr)
								
								|| a.USER_STAMP.Contains(queryStr)
								
								
								|| a.CONVERTED_QTY_UM.Contains(queryStr)
								|| a.FROM_LOC.Contains(queryStr)
								|| a.TO_LOC.Contains(queryStr)
								|| a.FROM_TEMPL_FIELD1.Contains(queryStr)
								|| a.FROM_TEMPL_FIELD2.Contains(queryStr)
								|| a.FROM_TEMPL_FIELD3.Contains(queryStr)
								|| a.FROM_TEMPL_FIELD4.Contains(queryStr)
								|| a.FROM_TEMPL_FIELD5.Contains(queryStr)
								|| a.TO_TEMPL_FIELD1.Contains(queryStr)
								|| a.TO_TEMPL_FIELD2.Contains(queryStr)
								|| a.TO_TEMPL_FIELD3.Contains(queryStr)
								|| a.TO_TEMPL_FIELD4.Contains(queryStr)
								|| a.TO_TEMPL_FIELD5.Contains(queryStr)
								|| a.TASK_CREATED.Contains(queryStr)
								|| a.FROM_ZONE.Contains(queryStr)
								|| a.FROM_LPN.Contains(queryStr)
								|| a.FROM_PARENT_LPN.Contains(queryStr)
								|| a.TO_ZONE.Contains(queryStr)
								|| a.TO_LPN.Contains(queryStr)
								|| a.TO_PARENT_LPN.Contains(queryStr)
								|| a.REPLENISHMENT_TYPE.Contains(queryStr)
								|| a.INVENTORY_STS.Contains(queryStr)
								);
			}else{
				queryData = m_Rep.GetList(where);
			}
			
		  
			pager.totalRows = queryData.Count();
			//排序
			queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
			return CreateModelList(ref queryData);
		}
		public virtual List<Apps.Models.SCV.REPLENISHMENT.REPLENISHMENT_REQUEST_MODEL> CreateModelList(ref IQueryable<Apps.Models.REPLENISHMENT_REQUEST> queryData)
		{

			List<Apps.Models.SCV.REPLENISHMENT.REPLENISHMENT_REQUEST_MODEL> modelList = (from r in queryData
											  select new Apps.Models.SCV.REPLENISHMENT.REPLENISHMENT_REQUEST_MODEL
											  {
													INTERNAL_RPLN_REQ_NUM = r.INTERNAL_RPLN_REQ_NUM,
													COMPANY = r.COMPANY,
													WAREHOUSE = r.WAREHOUSE,
													PRIORITY = r.PRIORITY,
													ITEM = r.ITEM,
													ITEM_DESC = r.ITEM_DESC,
													ALLOCATED_QTY = r.ALLOCATED_QTY,
													QUANTITY_UM = r.QUANTITY_UM,
													ATTRIBUTE_NUM = r.ATTRIBUTE_NUM,
													ALLOCATION_ZONE = r.ALLOCATION_ZONE,
													INTERNAL_WAVE_NUM = r.INTERNAL_WAVE_NUM,
													USER_STAMP = r.USER_STAMP,
													DATE_TIME_STAMP = r.DATE_TIME_STAMP,
													CONVERTED_ALLOC_QTY = r.CONVERTED_ALLOC_QTY,
													CONVERTED_QTY_UM = r.CONVERTED_QTY_UM,
													FROM_LOC = r.FROM_LOC,
													TO_LOC = r.TO_LOC,
													FROM_TEMPL_FIELD1 = r.FROM_TEMPL_FIELD1,
													FROM_TEMPL_FIELD2 = r.FROM_TEMPL_FIELD2,
													FROM_TEMPL_FIELD3 = r.FROM_TEMPL_FIELD3,
													FROM_TEMPL_FIELD4 = r.FROM_TEMPL_FIELD4,
													FROM_TEMPL_FIELD5 = r.FROM_TEMPL_FIELD5,
													TO_TEMPL_FIELD1 = r.TO_TEMPL_FIELD1,
													TO_TEMPL_FIELD2 = r.TO_TEMPL_FIELD2,
													TO_TEMPL_FIELD3 = r.TO_TEMPL_FIELD3,
													TO_TEMPL_FIELD4 = r.TO_TEMPL_FIELD4,
													TO_TEMPL_FIELD5 = r.TO_TEMPL_FIELD5,
													TASK_CREATED = r.TASK_CREATED,
													FROM_ZONE = r.FROM_ZONE,
													FROM_LPN = r.FROM_LPN,
													FROM_PARENT_LPN = r.FROM_PARENT_LPN,
													TO_ZONE = r.TO_ZONE,
													TO_LPN = r.TO_LPN,
													TO_PARENT_LPN = r.TO_PARENT_LPN,
													REPLENISHMENT_TYPE = r.REPLENISHMENT_TYPE,
													INVENTORY_STS = r.INVENTORY_STS,
          
											  }).ToList();

			return modelList;
		}

		public virtual void Create(ref ValidationErrors errors, Apps.Models.SCV.REPLENISHMENT.REPLENISHMENT_REQUEST_MODEL model)
		{
				Apps.Models.REPLENISHMENT_REQUEST entity = m_Rep.GetById(model.INTERNAL_RPLN_REQ_NUM);
				if (entity != null)
				{
					errors.Add(Resource.PrimaryRepeat);
					return;
				}
				entity = new Apps.Models.REPLENISHMENT_REQUEST();
			   				entity.INTERNAL_RPLN_REQ_NUM = model.INTERNAL_RPLN_REQ_NUM;
				entity.COMPANY = model.COMPANY;
				entity.WAREHOUSE = model.WAREHOUSE;
				entity.PRIORITY = model.PRIORITY;
				entity.ITEM = model.ITEM;
				entity.ITEM_DESC = model.ITEM_DESC;
				entity.ALLOCATED_QTY = model.ALLOCATED_QTY;
				entity.QUANTITY_UM = model.QUANTITY_UM;
				entity.ATTRIBUTE_NUM = model.ATTRIBUTE_NUM;
				entity.ALLOCATION_ZONE = model.ALLOCATION_ZONE;
				entity.INTERNAL_WAVE_NUM = model.INTERNAL_WAVE_NUM;
				entity.USER_STAMP = model.USER_STAMP;
				entity.DATE_TIME_STAMP = model.DATE_TIME_STAMP;
				entity.CONVERTED_ALLOC_QTY = model.CONVERTED_ALLOC_QTY;
				entity.CONVERTED_QTY_UM = model.CONVERTED_QTY_UM;
				entity.FROM_LOC = model.FROM_LOC;
				entity.TO_LOC = model.TO_LOC;
				entity.FROM_TEMPL_FIELD1 = model.FROM_TEMPL_FIELD1;
				entity.FROM_TEMPL_FIELD2 = model.FROM_TEMPL_FIELD2;
				entity.FROM_TEMPL_FIELD3 = model.FROM_TEMPL_FIELD3;
				entity.FROM_TEMPL_FIELD4 = model.FROM_TEMPL_FIELD4;
				entity.FROM_TEMPL_FIELD5 = model.FROM_TEMPL_FIELD5;
				entity.TO_TEMPL_FIELD1 = model.TO_TEMPL_FIELD1;
				entity.TO_TEMPL_FIELD2 = model.TO_TEMPL_FIELD2;
				entity.TO_TEMPL_FIELD3 = model.TO_TEMPL_FIELD3;
				entity.TO_TEMPL_FIELD4 = model.TO_TEMPL_FIELD4;
				entity.TO_TEMPL_FIELD5 = model.TO_TEMPL_FIELD5;
				entity.TASK_CREATED = model.TASK_CREATED;
				entity.FROM_ZONE = model.FROM_ZONE;
				entity.FROM_LPN = model.FROM_LPN;
				entity.FROM_PARENT_LPN = model.FROM_PARENT_LPN;
				entity.TO_ZONE = model.TO_ZONE;
				entity.TO_LPN = model.TO_LPN;
				entity.TO_PARENT_LPN = model.TO_PARENT_LPN;
				entity.REPLENISHMENT_TYPE = model.REPLENISHMENT_TYPE;
				entity.INVENTORY_STS = model.INVENTORY_STS;
  
				m_Rep.Create(entity);
		}



		 public virtual void RemoveById(ref ValidationErrors errors, string id)
		{
			
				m_Rep.RemoveById(id);
			
		}

		public virtual void RemoveByIds(ref ValidationErrors errors, string[] deleteCollection)
		{
				if (deleteCollection != null)
				{
				   //事务批量删除
				   // using (TransactionScope transactionScope = new TransactionScope())
				   // {
				   //     if (m_Rep.Delete(deleteCollection) == deleteCollection.Length)
				   //     {
				   //         transactionScope.Complete();
				   //         return true;
				   //     }
				   //    else
				   //     {
				   //         Transaction.Current.Rollback();
				   //         return false;
				   //     }
				   // }
				   m_Rep.RemoveById(deleteCollection);
				}
		}

		
	   

		public virtual void Modify(ref ValidationErrors errors, Apps.Models.SCV.REPLENISHMENT.REPLENISHMENT_REQUEST_MODEL model,params string[] updateProperties)
		{
				Apps.Models.REPLENISHMENT_REQUEST entity = m_Rep.GetById(model.INTERNAL_RPLN_REQ_NUM);
				if (entity == null)
				{
					errors.Add(Resource.Disable);
					return;
				}
							  				if (updateProperties.Count() <= 0){
										entity.INTERNAL_RPLN_REQ_NUM = model.INTERNAL_RPLN_REQ_NUM;
											entity.COMPANY = model.COMPANY;
											entity.WAREHOUSE = model.WAREHOUSE;
											entity.PRIORITY = model.PRIORITY;
											entity.ITEM = model.ITEM;
											entity.ITEM_DESC = model.ITEM_DESC;
											entity.ALLOCATED_QTY = model.ALLOCATED_QTY;
											entity.QUANTITY_UM = model.QUANTITY_UM;
											entity.ATTRIBUTE_NUM = model.ATTRIBUTE_NUM;
											entity.ALLOCATION_ZONE = model.ALLOCATION_ZONE;
											entity.INTERNAL_WAVE_NUM = model.INTERNAL_WAVE_NUM;
											entity.USER_STAMP = model.USER_STAMP;
											entity.DATE_TIME_STAMP = model.DATE_TIME_STAMP;
											entity.CONVERTED_ALLOC_QTY = model.CONVERTED_ALLOC_QTY;
											entity.CONVERTED_QTY_UM = model.CONVERTED_QTY_UM;
											entity.FROM_LOC = model.FROM_LOC;
											entity.TO_LOC = model.TO_LOC;
											entity.FROM_TEMPL_FIELD1 = model.FROM_TEMPL_FIELD1;
											entity.FROM_TEMPL_FIELD2 = model.FROM_TEMPL_FIELD2;
											entity.FROM_TEMPL_FIELD3 = model.FROM_TEMPL_FIELD3;
											entity.FROM_TEMPL_FIELD4 = model.FROM_TEMPL_FIELD4;
											entity.FROM_TEMPL_FIELD5 = model.FROM_TEMPL_FIELD5;
											entity.TO_TEMPL_FIELD1 = model.TO_TEMPL_FIELD1;
											entity.TO_TEMPL_FIELD2 = model.TO_TEMPL_FIELD2;
											entity.TO_TEMPL_FIELD3 = model.TO_TEMPL_FIELD3;
											entity.TO_TEMPL_FIELD4 = model.TO_TEMPL_FIELD4;
											entity.TO_TEMPL_FIELD5 = model.TO_TEMPL_FIELD5;
											entity.TASK_CREATED = model.TASK_CREATED;
											entity.FROM_ZONE = model.FROM_ZONE;
											entity.FROM_LPN = model.FROM_LPN;
											entity.FROM_PARENT_LPN = model.FROM_PARENT_LPN;
											entity.TO_ZONE = model.TO_ZONE;
											entity.TO_LPN = model.TO_LPN;
											entity.TO_PARENT_LPN = model.TO_PARENT_LPN;
											entity.REPLENISHMENT_TYPE = model.REPLENISHMENT_TYPE;
											entity.INVENTORY_STS = model.INVENTORY_STS;
									}else{
					
						Type type = typeof(Apps.Models.SCV.REPLENISHMENT.REPLENISHMENT_REQUEST_MODEL);
						Type typeE = typeof(Apps.Models.REPLENISHMENT_REQUEST);
						foreach (var item in updateProperties) {
						System.Reflection.PropertyInfo pi = type.GetProperty(item);
						System.Reflection.PropertyInfo piE = typeE.GetProperty(item);
						piE.SetValue(entity,pi.GetValue(model),null);
				}
				}
				 

				m_Rep.Modify(entity,updateProperties);
		}

	  

		public virtual Apps.Models.SCV.REPLENISHMENT.REPLENISHMENT_REQUEST_MODEL GetById(string id)
		{
			Apps.Models.REPLENISHMENT_REQUEST entity = m_Rep.GetById(id);
			if (entity!=null)
			{
				//REPLENISHMENT_REQUEST entity = m_Rep.GetById(id);
				Apps.Models.SCV.REPLENISHMENT.REPLENISHMENT_REQUEST_MODEL model = new Apps.Models.SCV.REPLENISHMENT.REPLENISHMENT_REQUEST_MODEL();
							  				model.INTERNAL_RPLN_REQ_NUM = entity.INTERNAL_RPLN_REQ_NUM;
				model.COMPANY = entity.COMPANY;
				model.WAREHOUSE = entity.WAREHOUSE;
				model.PRIORITY = entity.PRIORITY;
				model.ITEM = entity.ITEM;
				model.ITEM_DESC = entity.ITEM_DESC;
				model.ALLOCATED_QTY = entity.ALLOCATED_QTY;
				model.QUANTITY_UM = entity.QUANTITY_UM;
				model.ATTRIBUTE_NUM = entity.ATTRIBUTE_NUM;
				model.ALLOCATION_ZONE = entity.ALLOCATION_ZONE;
				model.INTERNAL_WAVE_NUM = entity.INTERNAL_WAVE_NUM;
				model.USER_STAMP = entity.USER_STAMP;
				model.DATE_TIME_STAMP = entity.DATE_TIME_STAMP;
				model.CONVERTED_ALLOC_QTY = entity.CONVERTED_ALLOC_QTY;
				model.CONVERTED_QTY_UM = entity.CONVERTED_QTY_UM;
				model.FROM_LOC = entity.FROM_LOC;
				model.TO_LOC = entity.TO_LOC;
				model.FROM_TEMPL_FIELD1 = entity.FROM_TEMPL_FIELD1;
				model.FROM_TEMPL_FIELD2 = entity.FROM_TEMPL_FIELD2;
				model.FROM_TEMPL_FIELD3 = entity.FROM_TEMPL_FIELD3;
				model.FROM_TEMPL_FIELD4 = entity.FROM_TEMPL_FIELD4;
				model.FROM_TEMPL_FIELD5 = entity.FROM_TEMPL_FIELD5;
				model.TO_TEMPL_FIELD1 = entity.TO_TEMPL_FIELD1;
				model.TO_TEMPL_FIELD2 = entity.TO_TEMPL_FIELD2;
				model.TO_TEMPL_FIELD3 = entity.TO_TEMPL_FIELD3;
				model.TO_TEMPL_FIELD4 = entity.TO_TEMPL_FIELD4;
				model.TO_TEMPL_FIELD5 = entity.TO_TEMPL_FIELD5;
				model.TASK_CREATED = entity.TASK_CREATED;
				model.FROM_ZONE = entity.FROM_ZONE;
				model.FROM_LPN = entity.FROM_LPN;
				model.FROM_PARENT_LPN = entity.FROM_PARENT_LPN;
				model.TO_ZONE = entity.TO_ZONE;
				model.TO_LPN = entity.TO_LPN;
				model.TO_PARENT_LPN = entity.TO_PARENT_LPN;
				model.REPLENISHMENT_TYPE = entity.REPLENISHMENT_TYPE;
				model.INVENTORY_STS = entity.INVENTORY_STS;
 
				return model;
			}
			else
			{
				return null;
			}
		}

	 

	}
}
