//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Apps.Models;
using Apps.Common;
using Microsoft.Practices.Unity;
using System.Transactions;
using Apps.Locale;
using System.Linq.Expressions;
namespace Apps.Service.SCV.MISC
{
	public class Virtual_MISC_INVENTORY_HANDLING_SERVICE
	{

		public Apps.IRepository.SCV.ISCVDBSession SCVDBSession{
			 get
			{
				return Service.SCV.SCVDBSessionFactory.GetDBSession();
			}
		}
	   
		public Apps.IRepository.SCV.MISC.IMISC_INVENTORY_HANDLING_REPOSITORY m_Rep{
			 get
			{
				return SCVDBSession.MISC_INVENTORY_HANDLING;
			}
		}
		

		public virtual List<Apps.Models.SCV.MISC.MISC_INVENTORY_HANDLING_MODEL> GetList(Expression<Func<Apps.Models.MISC_INVENTORY_HANDLING, bool>> where = null){
		
				IQueryable<Apps.Models.MISC_INVENTORY_HANDLING> queryData = m_Rep.GetList(where);
				return CreateModelList(ref queryData);
		}

		public virtual List<Apps.Models.SCV.MISC.MISC_INVENTORY_HANDLING_MODEL> GetListSort<TKey>(Expression<Func<Apps.Models.MISC_INVENTORY_HANDLING, bool>> where,Expression<Func<Apps.Models.MISC_INVENTORY_HANDLING, TKey>>orderBy, bool isAsc = true){
		
				IQueryable<Apps.Models.MISC_INVENTORY_HANDLING> queryData = m_Rep.GetListSort(where, orderBy, isAsc);
				return CreateModelList(ref queryData);
		}

		public virtual List<Apps.Models.SCV.MISC.MISC_INVENTORY_HANDLING_MODEL> GetList(ref GridPager pager, string queryStr,Expression<Func<Apps.Models.MISC_INVENTORY_HANDLING, bool>> where = null)
		{

			IQueryable<Apps.Models.MISC_INVENTORY_HANDLING> queryData;
			
			if (!string.IsNullOrWhiteSpace(queryStr))
			{
				queryData = m_Rep.GetList(where
								
								,a=>a.BATCH_ID.Contains(queryStr)
								|| a.ERROR_TYPE.Contains(queryStr)
								|| a.CART_ID.Contains(queryStr)
								|| a.CART_POS.Contains(queryStr)
								
								|| a.WAREHOUSE.Contains(queryStr)
								|| a.COMPANY.Contains(queryStr)
								|| a.ITEM.Contains(queryStr)
								|| a.ITEM_DESC.Contains(queryStr)
								
								|| a.ATTRIBUTE1.Contains(queryStr)
								|| a.ATTRIBUTE2.Contains(queryStr)
								|| a.ATTRIBUTE3.Contains(queryStr)
								|| a.ATTRIBUTE4.Contains(queryStr)
								|| a.ATTRIBUTE5.Contains(queryStr)
								|| a.ATTRIBUTE6.Contains(queryStr)
								|| a.ATTRIBUTE7.Contains(queryStr)
								|| a.ATTRIBUTE8.Contains(queryStr)
								
								|| a.FROM_LOC.Contains(queryStr)
								|| a.TO_LOC.Contains(queryStr)
								|| a.REFERENCE_TYPE.Contains(queryStr)
								|| a.REFERNCE_ID.Contains(queryStr)
								
								
								|| a.REFERENCE_CONT_ID.Contains(queryStr)
								
								|| a.CHECKIN_USER.Contains(queryStr)
								|| a.PUTAWAY_USER.Contains(queryStr)
								|| a.PICK_USER.Contains(queryStr)
								|| a.REBIN_USER.Contains(queryStr)
								|| a.QC_USER.Contains(queryStr)
								|| a.CREATE_USER.Contains(queryStr)
								
								|| a.USER_STAMP.Contains(queryStr)
								
								|| a.USER_DEF1.Contains(queryStr)
								|| a.USER_DEF2.Contains(queryStr)
								|| a.USER_DEF3.Contains(queryStr)
								|| a.USER_DEF4.Contains(queryStr)
								|| a.USER_DEF5.Contains(queryStr)
								|| a.USER_DEF6.Contains(queryStr)
								|| a.USER_DEF7.Contains(queryStr)
								|| a.USER_DEF8.Contains(queryStr)
								);
			}else{
				queryData = m_Rep.GetList(where);
			}
			
		  
			pager.totalRows = queryData.Count();
			//排序
			queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
			return CreateModelList(ref queryData);
		}
		public virtual List<Apps.Models.SCV.MISC.MISC_INVENTORY_HANDLING_MODEL> CreateModelList(ref IQueryable<Apps.Models.MISC_INVENTORY_HANDLING> queryData)
		{

			List<Apps.Models.SCV.MISC.MISC_INVENTORY_HANDLING_MODEL> modelList = (from r in queryData
											  select new Apps.Models.SCV.MISC.MISC_INVENTORY_HANDLING_MODEL
											  {
													INTERNAL_NUM = r.INTERNAL_NUM,
													BATCH_ID = r.BATCH_ID,
													ERROR_TYPE = r.ERROR_TYPE,
													CART_ID = r.CART_ID,
													CART_POS = r.CART_POS,
													STATUS = r.STATUS,
													WAREHOUSE = r.WAREHOUSE,
													COMPANY = r.COMPANY,
													ITEM = r.ITEM,
													ITEM_DESC = r.ITEM_DESC,
													ATTRIBUTE_NUM = r.ATTRIBUTE_NUM,
													ATTRIBUTE1 = r.ATTRIBUTE1,
													ATTRIBUTE2 = r.ATTRIBUTE2,
													ATTRIBUTE3 = r.ATTRIBUTE3,
													ATTRIBUTE4 = r.ATTRIBUTE4,
													ATTRIBUTE5 = r.ATTRIBUTE5,
													ATTRIBUTE6 = r.ATTRIBUTE6,
													ATTRIBUTE7 = r.ATTRIBUTE7,
													ATTRIBUTE8 = r.ATTRIBUTE8,
													QUANTITY = r.QUANTITY,
													FROM_LOC = r.FROM_LOC,
													TO_LOC = r.TO_LOC,
													REFERENCE_TYPE = r.REFERENCE_TYPE,
													REFERNCE_ID = r.REFERNCE_ID,
													REFERENCE_NUM = r.REFERENCE_NUM,
													REFERENCE_LINE_NUM = r.REFERENCE_LINE_NUM,
													REFERENCE_CONT_ID = r.REFERENCE_CONT_ID,
													REFERENCE_CONT_NUM = r.REFERENCE_CONT_NUM,
													CHECKIN_USER = r.CHECKIN_USER,
													PUTAWAY_USER = r.PUTAWAY_USER,
													PICK_USER = r.PICK_USER,
													REBIN_USER = r.REBIN_USER,
													QC_USER = r.QC_USER,
													CREATE_USER = r.CREATE_USER,
													CREATE_DATE_TIME = r.CREATE_DATE_TIME,
													USER_STAMP = r.USER_STAMP,
													DATE_TIME_STAMP = r.DATE_TIME_STAMP,
													USER_DEF1 = r.USER_DEF1,
													USER_DEF2 = r.USER_DEF2,
													USER_DEF3 = r.USER_DEF3,
													USER_DEF4 = r.USER_DEF4,
													USER_DEF5 = r.USER_DEF5,
													USER_DEF6 = r.USER_DEF6,
													USER_DEF7 = r.USER_DEF7,
													USER_DEF8 = r.USER_DEF8,
          
											  }).ToList();

			return modelList;
		}

		public virtual void Create(ref ValidationErrors errors, Apps.Models.SCV.MISC.MISC_INVENTORY_HANDLING_MODEL model)
		{
				Apps.Models.MISC_INVENTORY_HANDLING entity = m_Rep.GetById(model.INTERNAL_NUM);
				if (entity != null)
				{
					errors.Add(Resource.PrimaryRepeat);
					return;
				}
				entity = new Apps.Models.MISC_INVENTORY_HANDLING();
			   				entity.INTERNAL_NUM = model.INTERNAL_NUM;
				entity.BATCH_ID = model.BATCH_ID;
				entity.ERROR_TYPE = model.ERROR_TYPE;
				entity.CART_ID = model.CART_ID;
				entity.CART_POS = model.CART_POS;
				entity.STATUS = model.STATUS;
				entity.WAREHOUSE = model.WAREHOUSE;
				entity.COMPANY = model.COMPANY;
				entity.ITEM = model.ITEM;
				entity.ITEM_DESC = model.ITEM_DESC;
				entity.ATTRIBUTE_NUM = model.ATTRIBUTE_NUM;
				entity.ATTRIBUTE1 = model.ATTRIBUTE1;
				entity.ATTRIBUTE2 = model.ATTRIBUTE2;
				entity.ATTRIBUTE3 = model.ATTRIBUTE3;
				entity.ATTRIBUTE4 = model.ATTRIBUTE4;
				entity.ATTRIBUTE5 = model.ATTRIBUTE5;
				entity.ATTRIBUTE6 = model.ATTRIBUTE6;
				entity.ATTRIBUTE7 = model.ATTRIBUTE7;
				entity.ATTRIBUTE8 = model.ATTRIBUTE8;
				entity.QUANTITY = model.QUANTITY;
				entity.FROM_LOC = model.FROM_LOC;
				entity.TO_LOC = model.TO_LOC;
				entity.REFERENCE_TYPE = model.REFERENCE_TYPE;
				entity.REFERNCE_ID = model.REFERNCE_ID;
				entity.REFERENCE_NUM = model.REFERENCE_NUM;
				entity.REFERENCE_LINE_NUM = model.REFERENCE_LINE_NUM;
				entity.REFERENCE_CONT_ID = model.REFERENCE_CONT_ID;
				entity.REFERENCE_CONT_NUM = model.REFERENCE_CONT_NUM;
				entity.CHECKIN_USER = model.CHECKIN_USER;
				entity.PUTAWAY_USER = model.PUTAWAY_USER;
				entity.PICK_USER = model.PICK_USER;
				entity.REBIN_USER = model.REBIN_USER;
				entity.QC_USER = model.QC_USER;
				entity.CREATE_USER = model.CREATE_USER;
				entity.CREATE_DATE_TIME = model.CREATE_DATE_TIME;
				entity.USER_STAMP = model.USER_STAMP;
				entity.DATE_TIME_STAMP = model.DATE_TIME_STAMP;
				entity.USER_DEF1 = model.USER_DEF1;
				entity.USER_DEF2 = model.USER_DEF2;
				entity.USER_DEF3 = model.USER_DEF3;
				entity.USER_DEF4 = model.USER_DEF4;
				entity.USER_DEF5 = model.USER_DEF5;
				entity.USER_DEF6 = model.USER_DEF6;
				entity.USER_DEF7 = model.USER_DEF7;
				entity.USER_DEF8 = model.USER_DEF8;
  
				m_Rep.Create(entity);
		}



		 public virtual void RemoveById(ref ValidationErrors errors, string id)
		{
			
				m_Rep.RemoveById(id);
			
		}

		public virtual void RemoveByIds(ref ValidationErrors errors, string[] deleteCollection)
		{
				if (deleteCollection != null)
				{
				   //事务批量删除
				   // using (TransactionScope transactionScope = new TransactionScope())
				   // {
				   //     if (m_Rep.Delete(deleteCollection) == deleteCollection.Length)
				   //     {
				   //         transactionScope.Complete();
				   //         return true;
				   //     }
				   //    else
				   //     {
				   //         Transaction.Current.Rollback();
				   //         return false;
				   //     }
				   // }
				   m_Rep.RemoveById(deleteCollection);
				}
		}

		
	   

		public virtual void Modify(ref ValidationErrors errors, Apps.Models.SCV.MISC.MISC_INVENTORY_HANDLING_MODEL model,params string[] updateProperties)
		{
				Apps.Models.MISC_INVENTORY_HANDLING entity = m_Rep.GetById(model.INTERNAL_NUM);
				if (entity == null)
				{
					errors.Add(Resource.Disable);
					return;
				}
							  				if (updateProperties.Count() <= 0){
										entity.INTERNAL_NUM = model.INTERNAL_NUM;
											entity.BATCH_ID = model.BATCH_ID;
											entity.ERROR_TYPE = model.ERROR_TYPE;
											entity.CART_ID = model.CART_ID;
											entity.CART_POS = model.CART_POS;
											entity.STATUS = model.STATUS;
											entity.WAREHOUSE = model.WAREHOUSE;
											entity.COMPANY = model.COMPANY;
											entity.ITEM = model.ITEM;
											entity.ITEM_DESC = model.ITEM_DESC;
											entity.ATTRIBUTE_NUM = model.ATTRIBUTE_NUM;
											entity.ATTRIBUTE1 = model.ATTRIBUTE1;
											entity.ATTRIBUTE2 = model.ATTRIBUTE2;
											entity.ATTRIBUTE3 = model.ATTRIBUTE3;
											entity.ATTRIBUTE4 = model.ATTRIBUTE4;
											entity.ATTRIBUTE5 = model.ATTRIBUTE5;
											entity.ATTRIBUTE6 = model.ATTRIBUTE6;
											entity.ATTRIBUTE7 = model.ATTRIBUTE7;
											entity.ATTRIBUTE8 = model.ATTRIBUTE8;
											entity.QUANTITY = model.QUANTITY;
											entity.FROM_LOC = model.FROM_LOC;
											entity.TO_LOC = model.TO_LOC;
											entity.REFERENCE_TYPE = model.REFERENCE_TYPE;
											entity.REFERNCE_ID = model.REFERNCE_ID;
											entity.REFERENCE_NUM = model.REFERENCE_NUM;
											entity.REFERENCE_LINE_NUM = model.REFERENCE_LINE_NUM;
											entity.REFERENCE_CONT_ID = model.REFERENCE_CONT_ID;
											entity.REFERENCE_CONT_NUM = model.REFERENCE_CONT_NUM;
											entity.CHECKIN_USER = model.CHECKIN_USER;
											entity.PUTAWAY_USER = model.PUTAWAY_USER;
											entity.PICK_USER = model.PICK_USER;
											entity.REBIN_USER = model.REBIN_USER;
											entity.QC_USER = model.QC_USER;
											entity.CREATE_USER = model.CREATE_USER;
											entity.CREATE_DATE_TIME = model.CREATE_DATE_TIME;
											entity.USER_STAMP = model.USER_STAMP;
											entity.DATE_TIME_STAMP = model.DATE_TIME_STAMP;
											entity.USER_DEF1 = model.USER_DEF1;
											entity.USER_DEF2 = model.USER_DEF2;
											entity.USER_DEF3 = model.USER_DEF3;
											entity.USER_DEF4 = model.USER_DEF4;
											entity.USER_DEF5 = model.USER_DEF5;
											entity.USER_DEF6 = model.USER_DEF6;
											entity.USER_DEF7 = model.USER_DEF7;
											entity.USER_DEF8 = model.USER_DEF8;
									}else{
					
						Type type = typeof(Apps.Models.SCV.MISC.MISC_INVENTORY_HANDLING_MODEL);
						Type typeE = typeof(Apps.Models.MISC_INVENTORY_HANDLING);
						foreach (var item in updateProperties) {
						System.Reflection.PropertyInfo pi = type.GetProperty(item);
						System.Reflection.PropertyInfo piE = typeE.GetProperty(item);
						piE.SetValue(entity,pi.GetValue(model),null);
				}
				}
				 

				m_Rep.Modify(entity,updateProperties);
		}

	  

		public virtual Apps.Models.SCV.MISC.MISC_INVENTORY_HANDLING_MODEL GetById(string id)
		{
			Apps.Models.MISC_INVENTORY_HANDLING entity = m_Rep.GetById(id);
			if (entity!=null)
			{
				//MISC_INVENTORY_HANDLING entity = m_Rep.GetById(id);
				Apps.Models.SCV.MISC.MISC_INVENTORY_HANDLING_MODEL model = new Apps.Models.SCV.MISC.MISC_INVENTORY_HANDLING_MODEL();
							  				model.INTERNAL_NUM = entity.INTERNAL_NUM;
				model.BATCH_ID = entity.BATCH_ID;
				model.ERROR_TYPE = entity.ERROR_TYPE;
				model.CART_ID = entity.CART_ID;
				model.CART_POS = entity.CART_POS;
				model.STATUS = entity.STATUS;
				model.WAREHOUSE = entity.WAREHOUSE;
				model.COMPANY = entity.COMPANY;
				model.ITEM = entity.ITEM;
				model.ITEM_DESC = entity.ITEM_DESC;
				model.ATTRIBUTE_NUM = entity.ATTRIBUTE_NUM;
				model.ATTRIBUTE1 = entity.ATTRIBUTE1;
				model.ATTRIBUTE2 = entity.ATTRIBUTE2;
				model.ATTRIBUTE3 = entity.ATTRIBUTE3;
				model.ATTRIBUTE4 = entity.ATTRIBUTE4;
				model.ATTRIBUTE5 = entity.ATTRIBUTE5;
				model.ATTRIBUTE6 = entity.ATTRIBUTE6;
				model.ATTRIBUTE7 = entity.ATTRIBUTE7;
				model.ATTRIBUTE8 = entity.ATTRIBUTE8;
				model.QUANTITY = entity.QUANTITY;
				model.FROM_LOC = entity.FROM_LOC;
				model.TO_LOC = entity.TO_LOC;
				model.REFERENCE_TYPE = entity.REFERENCE_TYPE;
				model.REFERNCE_ID = entity.REFERNCE_ID;
				model.REFERENCE_NUM = entity.REFERENCE_NUM;
				model.REFERENCE_LINE_NUM = entity.REFERENCE_LINE_NUM;
				model.REFERENCE_CONT_ID = entity.REFERENCE_CONT_ID;
				model.REFERENCE_CONT_NUM = entity.REFERENCE_CONT_NUM;
				model.CHECKIN_USER = entity.CHECKIN_USER;
				model.PUTAWAY_USER = entity.PUTAWAY_USER;
				model.PICK_USER = entity.PICK_USER;
				model.REBIN_USER = entity.REBIN_USER;
				model.QC_USER = entity.QC_USER;
				model.CREATE_USER = entity.CREATE_USER;
				model.CREATE_DATE_TIME = entity.CREATE_DATE_TIME;
				model.USER_STAMP = entity.USER_STAMP;
				model.DATE_TIME_STAMP = entity.DATE_TIME_STAMP;
				model.USER_DEF1 = entity.USER_DEF1;
				model.USER_DEF2 = entity.USER_DEF2;
				model.USER_DEF3 = entity.USER_DEF3;
				model.USER_DEF4 = entity.USER_DEF4;
				model.USER_DEF5 = entity.USER_DEF5;
				model.USER_DEF6 = entity.USER_DEF6;
				model.USER_DEF7 = entity.USER_DEF7;
				model.USER_DEF8 = entity.USER_DEF8;
 
				return model;
			}
			else
			{
				return null;
			}
		}

	 

	}
}
