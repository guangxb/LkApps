//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Apps.Models;
using Apps.Common;
using Microsoft.Practices.Unity;
using System.Transactions;
using Apps.Locale;
using System.Linq.Expressions;
namespace Apps.Service.SCV.AR
{
	public class Virtual_AR_DOWNLOAD_SHIPMENT_HEADER_SERVICE
	{

		public Apps.IRepository.SCV.ISCVDBSession SCVDBSession{
			 get
			{
				return Service.SCV.SCVDBSessionFactory.GetDBSession();
			}
		}
	   
		public Apps.IRepository.SCV.AR.IAR_DOWNLOAD_SHIPMENT_HEADER_REPOSITORY m_Rep{
			 get
			{
				return SCVDBSession.AR_DOWNLOAD_SHIPMENT_HEADER;
			}
		}
		

		public virtual List<Apps.Models.SCV.AR.AR_DOWNLOAD_SHIPMENT_HEADER_MODEL> GetList(Expression<Func<Apps.Models.AR_DOWNLOAD_SHIPMENT_HEADER, bool>> where = null){
		
				IQueryable<Apps.Models.AR_DOWNLOAD_SHIPMENT_HEADER> queryData = m_Rep.GetList(where);
				return CreateModelList(ref queryData);
		}

		public virtual List<Apps.Models.SCV.AR.AR_DOWNLOAD_SHIPMENT_HEADER_MODEL> GetListSort<TKey>(Expression<Func<Apps.Models.AR_DOWNLOAD_SHIPMENT_HEADER, bool>> where,Expression<Func<Apps.Models.AR_DOWNLOAD_SHIPMENT_HEADER, TKey>>orderBy, bool isAsc = true){
		
				IQueryable<Apps.Models.AR_DOWNLOAD_SHIPMENT_HEADER> queryData = m_Rep.GetListSort(where, orderBy, isAsc);
				return CreateModelList(ref queryData);
		}

		public virtual List<Apps.Models.SCV.AR.AR_DOWNLOAD_SHIPMENT_HEADER_MODEL> GetList(ref GridPager pager, string queryStr,Expression<Func<Apps.Models.AR_DOWNLOAD_SHIPMENT_HEADER, bool>> where = null)
		{

			IQueryable<Apps.Models.AR_DOWNLOAD_SHIPMENT_HEADER> queryData;
			
			if (!string.IsNullOrWhiteSpace(queryStr))
			{
				queryData = m_Rep.GetList(where
								,a=>a.INTERFACE_RECORD_ID.Contains(queryStr)
								|| a.INTERFACE_ACTION_CODE.Contains(queryStr)
								|| a.INTERFACE_CONDITION.Contains(queryStr)
								|| a.PROCESS_STAMP.Contains(queryStr)
								|| a.WAREHOUSE.Contains(queryStr)
								|| a.COMPANY.Contains(queryStr)
								
								|| a.SHIPMENT_ID.Contains(queryStr)
								|| a.ERP_ORDER.Contains(queryStr)
								
								
								|| a.PROCESS_TYPE.Contains(queryStr)
								|| a.SHIPMENT_TYPE.Contains(queryStr)
								|| a.ROUTE.Contains(queryStr)
								|| a.SHIP_TO.Contains(queryStr)
								|| a.SHIP_TO_NAME.Contains(queryStr)
								|| a.SHIP_TO_ADDRESS1.Contains(queryStr)
								|| a.SHIP_TO_ADDRESS2.Contains(queryStr)
								|| a.SHIP_TO_DISTRICT.Contains(queryStr)
								|| a.SHIP_TO_CITY.Contains(queryStr)
								|| a.SHIP_TO_STATE.Contains(queryStr)
								|| a.SHIP_TO_COUNTRY.Contains(queryStr)
								|| a.SHIP_TO_POSTAL_CODE.Contains(queryStr)
								|| a.SHIP_TO_ATTENTION_TO.Contains(queryStr)
								|| a.SHIP_TO_PHONE_NUM.Contains(queryStr)
								|| a.SHIP_TO_FAX_NUM.Contains(queryStr)
								|| a.SHIP_TO_EMAIL_ADDRESS.Contains(queryStr)
								
								|| a.USER_STAMP.Contains(queryStr)
								
								
								|| a.REQUESTED_DELIVERY_TYPE.Contains(queryStr)
								
								
								
								|| a.DELIVERY_NOTE.Contains(queryStr)
								|| a.REJECTION_NOTE.Contains(queryStr)
								
								|| a.SHIP_DOCK.Contains(queryStr)
								|| a.ALLOCATE_COMPLETE.Contains(queryStr)
								
								
								|| a.WEIGHT_UM.Contains(queryStr)
								
								|| a.VOLUME_UM.Contains(queryStr)
								
								
								|| a.CARRIER.Contains(queryStr)
								|| a.CARRIER_SERVICE.Contains(queryStr)
								|| a.USER_DEF1.Contains(queryStr)
								|| a.USER_DEF2.Contains(queryStr)
								|| a.USER_DEF3.Contains(queryStr)
								|| a.USER_DEF4.Contains(queryStr)
								|| a.USER_DEF5.Contains(queryStr)
								|| a.USER_DEF6.Contains(queryStr)
								|| a.USER_DEF7.Contains(queryStr)
								|| a.USER_DEF8.Contains(queryStr)
								
								
								
								
								|| a.SIGN_VALUE.Contains(queryStr)
								|| a.SHIPMENT_SUB_TYPE.Contains(queryStr)
								|| a.SHIPMENT_CATEGORY1.Contains(queryStr)
								|| a.SHIPMENT_CATEGORY2.Contains(queryStr)
								|| a.SHIPMENT_CATEGORY3.Contains(queryStr)
								|| a.SHIPMENT_CATEGORY4.Contains(queryStr)
								|| a.SHIPMENT_CATEGORY5.Contains(queryStr)
								|| a.SHIPMENT_CATEGORY6.Contains(queryStr)
								|| a.SHIPMENT_CATEGORY7.Contains(queryStr)
								|| a.SHIPMENT_CATEGORY8.Contains(queryStr)
								|| a.SHIP_TO_MOBILE.Contains(queryStr)
								|| a.SHIPMENT_NOTE.Contains(queryStr)
								
								
								
								|| a.UPLOAD_INTERFACE_FLAG.Contains(queryStr)
								|| a.STOP_SEQ.Contains(queryStr)
								
								|| a.CREATE_USER.Contains(queryStr)
								|| a.COD_REQUIRED.Contains(queryStr)
								
								|| a.DEIVERY_WINDOW.Contains(queryStr)
								|| a.ALLOW_CONSOLIDATE.Contains(queryStr)
								|| a.CONSOLIDATED.Contains(queryStr)
								|| a.INVOICE_REQUIRED.Contains(queryStr)
								
								|| a.HOST_COMPANY.Contains(queryStr)
								
								|| a.UPLOAD_INTERFACE_REQUIRED.Contains(queryStr)
								|| a.SO_OPERATOR.Contains(queryStr)
								|| a.SO_OPERATOR_PHONE_NUM.Contains(queryStr)
								|| a.SO_EMAIL_ADDRESS.Contains(queryStr)
								);
			}else{
				queryData = m_Rep.GetList(where);
			}
			
		  
			pager.totalRows = queryData.Count();
			//排序
			queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
			return CreateModelList(ref queryData);
		}
		public virtual List<Apps.Models.SCV.AR.AR_DOWNLOAD_SHIPMENT_HEADER_MODEL> CreateModelList(ref IQueryable<Apps.Models.AR_DOWNLOAD_SHIPMENT_HEADER> queryData)
		{

			List<Apps.Models.SCV.AR.AR_DOWNLOAD_SHIPMENT_HEADER_MODEL> modelList = (from r in queryData
											  select new Apps.Models.SCV.AR.AR_DOWNLOAD_SHIPMENT_HEADER_MODEL
											  {
													INTERFACE_RECORD_ID = r.INTERFACE_RECORD_ID,
													INTERFACE_ACTION_CODE = r.INTERFACE_ACTION_CODE,
													INTERFACE_CONDITION = r.INTERFACE_CONDITION,
													PROCESS_STAMP = r.PROCESS_STAMP,
													WAREHOUSE = r.WAREHOUSE,
													COMPANY = r.COMPANY,
													INTERNAL_LOAD_NUM = r.INTERNAL_LOAD_NUM,
													SHIPMENT_ID = r.SHIPMENT_ID,
													ERP_ORDER = r.ERP_ORDER,
													LEADING_STS = r.LEADING_STS,
													TRAILING_STS = r.TRAILING_STS,
													PROCESS_TYPE = r.PROCESS_TYPE,
													SHIPMENT_TYPE = r.SHIPMENT_TYPE,
													ROUTE = r.ROUTE,
													SHIP_TO = r.SHIP_TO,
													SHIP_TO_NAME = r.SHIP_TO_NAME,
													SHIP_TO_ADDRESS1 = r.SHIP_TO_ADDRESS1,
													SHIP_TO_ADDRESS2 = r.SHIP_TO_ADDRESS2,
													SHIP_TO_DISTRICT = r.SHIP_TO_DISTRICT,
													SHIP_TO_CITY = r.SHIP_TO_CITY,
													SHIP_TO_STATE = r.SHIP_TO_STATE,
													SHIP_TO_COUNTRY = r.SHIP_TO_COUNTRY,
													SHIP_TO_POSTAL_CODE = r.SHIP_TO_POSTAL_CODE,
													SHIP_TO_ATTENTION_TO = r.SHIP_TO_ATTENTION_TO,
													SHIP_TO_PHONE_NUM = r.SHIP_TO_PHONE_NUM,
													SHIP_TO_FAX_NUM = r.SHIP_TO_FAX_NUM,
													SHIP_TO_EMAIL_ADDRESS = r.SHIP_TO_EMAIL_ADDRESS,
													PRIORITY = r.PRIORITY,
													USER_STAMP = r.USER_STAMP,
													DATE_TIME_STAMP = r.DATE_TIME_STAMP,
													REQUESTED_DELIVERY_DATE = r.REQUESTED_DELIVERY_DATE,
													REQUESTED_DELIVERY_TYPE = r.REQUESTED_DELIVERY_TYPE,
													SCHEDULED_SHIP_DATE = r.SCHEDULED_SHIP_DATE,
													ACTUAL_SHIP_DATE_TIME = r.ACTUAL_SHIP_DATE_TIME,
													ACTUAL_DELIVERY_DATE_TIME = r.ACTUAL_DELIVERY_DATE_TIME,
													DELIVERY_NOTE = r.DELIVERY_NOTE,
													REJECTION_NOTE = r.REJECTION_NOTE,
													INTERNAL_WAVE_NUM = r.INTERNAL_WAVE_NUM,
													SHIP_DOCK = r.SHIP_DOCK,
													ALLOCATE_COMPLETE = r.ALLOCATE_COMPLETE,
													TOTAL_QTY = r.TOTAL_QTY,
													TOTAL_WEIGHT = r.TOTAL_WEIGHT,
													WEIGHT_UM = r.WEIGHT_UM,
													TOTAL_VOLUME = r.TOTAL_VOLUME,
													VOLUME_UM = r.VOLUME_UM,
													TOTAL_LINES = r.TOTAL_LINES,
													TOTAL_CONTAINERS = r.TOTAL_CONTAINERS,
													CARRIER = r.CARRIER,
													CARRIER_SERVICE = r.CARRIER_SERVICE,
													USER_DEF1 = r.USER_DEF1,
													USER_DEF2 = r.USER_DEF2,
													USER_DEF3 = r.USER_DEF3,
													USER_DEF4 = r.USER_DEF4,
													USER_DEF5 = r.USER_DEF5,
													USER_DEF6 = r.USER_DEF6,
													USER_DEF7 = r.USER_DEF7,
													USER_DEF8 = r.USER_DEF8,
													BACK_ORDER_NUM = r.BACK_ORDER_NUM,
													LAST_WAVE_NUM = r.LAST_WAVE_NUM,
													GROUP_NUM = r.GROUP_NUM,
													GROUP_INDEX = r.GROUP_INDEX,
													SIGN_VALUE = r.SIGN_VALUE,
													SHIPMENT_SUB_TYPE = r.SHIPMENT_SUB_TYPE,
													SHIPMENT_CATEGORY1 = r.SHIPMENT_CATEGORY1,
													SHIPMENT_CATEGORY2 = r.SHIPMENT_CATEGORY2,
													SHIPMENT_CATEGORY3 = r.SHIPMENT_CATEGORY3,
													SHIPMENT_CATEGORY4 = r.SHIPMENT_CATEGORY4,
													SHIPMENT_CATEGORY5 = r.SHIPMENT_CATEGORY5,
													SHIPMENT_CATEGORY6 = r.SHIPMENT_CATEGORY6,
													SHIPMENT_CATEGORY7 = r.SHIPMENT_CATEGORY7,
													SHIPMENT_CATEGORY8 = r.SHIPMENT_CATEGORY8,
													SHIP_TO_MOBILE = r.SHIP_TO_MOBILE,
													SHIPMENT_NOTE = r.SHIPMENT_NOTE,
													TOTAL_VALUE = r.TOTAL_VALUE,
													USER_DEF9 = r.USER_DEF9,
													USER_DEF10 = r.USER_DEF10,
													UPLOAD_INTERFACE_FLAG = r.UPLOAD_INTERFACE_FLAG,
													STOP_SEQ = r.STOP_SEQ,
													CREATE_DATE_TIME = r.CREATE_DATE_TIME,
													CREATE_USER = r.CREATE_USER,
													COD_REQUIRED = r.COD_REQUIRED,
													COD_VALUE = r.COD_VALUE,
													DEIVERY_WINDOW = r.DEIVERY_WINDOW,
													ALLOW_CONSOLIDATE = r.ALLOW_CONSOLIDATE,
													CONSOLIDATED = r.CONSOLIDATED,
													INVOICE_REQUIRED = r.INVOICE_REQUIRED,
													INTERNAL_INVOICE_NUM = r.INTERNAL_INVOICE_NUM,
													HOST_COMPANY = r.HOST_COMPANY,
													UPLOAD_INTERFACE_DATE_TIME = r.UPLOAD_INTERFACE_DATE_TIME,
													UPLOAD_INTERFACE_REQUIRED = r.UPLOAD_INTERFACE_REQUIRED,
													SO_OPERATOR = r.SO_OPERATOR,
													SO_OPERATOR_PHONE_NUM = r.SO_OPERATOR_PHONE_NUM,
													SO_EMAIL_ADDRESS = r.SO_EMAIL_ADDRESS,
          
											  }).ToList();

			return modelList;
		}

		public virtual void Create(ref ValidationErrors errors, Apps.Models.SCV.AR.AR_DOWNLOAD_SHIPMENT_HEADER_MODEL model)
		{
				Apps.Models.AR_DOWNLOAD_SHIPMENT_HEADER entity = m_Rep.GetById(model.INTERFACE_RECORD_ID);
				if (entity != null)
				{
					errors.Add(Resource.PrimaryRepeat);
					return;
				}
				entity = new Apps.Models.AR_DOWNLOAD_SHIPMENT_HEADER();
			   				entity.INTERFACE_RECORD_ID = model.INTERFACE_RECORD_ID;
				entity.INTERFACE_ACTION_CODE = model.INTERFACE_ACTION_CODE;
				entity.INTERFACE_CONDITION = model.INTERFACE_CONDITION;
				entity.PROCESS_STAMP = model.PROCESS_STAMP;
				entity.WAREHOUSE = model.WAREHOUSE;
				entity.COMPANY = model.COMPANY;
				entity.INTERNAL_LOAD_NUM = model.INTERNAL_LOAD_NUM;
				entity.SHIPMENT_ID = model.SHIPMENT_ID;
				entity.ERP_ORDER = model.ERP_ORDER;
				entity.LEADING_STS = model.LEADING_STS;
				entity.TRAILING_STS = model.TRAILING_STS;
				entity.PROCESS_TYPE = model.PROCESS_TYPE;
				entity.SHIPMENT_TYPE = model.SHIPMENT_TYPE;
				entity.ROUTE = model.ROUTE;
				entity.SHIP_TO = model.SHIP_TO;
				entity.SHIP_TO_NAME = model.SHIP_TO_NAME;
				entity.SHIP_TO_ADDRESS1 = model.SHIP_TO_ADDRESS1;
				entity.SHIP_TO_ADDRESS2 = model.SHIP_TO_ADDRESS2;
				entity.SHIP_TO_DISTRICT = model.SHIP_TO_DISTRICT;
				entity.SHIP_TO_CITY = model.SHIP_TO_CITY;
				entity.SHIP_TO_STATE = model.SHIP_TO_STATE;
				entity.SHIP_TO_COUNTRY = model.SHIP_TO_COUNTRY;
				entity.SHIP_TO_POSTAL_CODE = model.SHIP_TO_POSTAL_CODE;
				entity.SHIP_TO_ATTENTION_TO = model.SHIP_TO_ATTENTION_TO;
				entity.SHIP_TO_PHONE_NUM = model.SHIP_TO_PHONE_NUM;
				entity.SHIP_TO_FAX_NUM = model.SHIP_TO_FAX_NUM;
				entity.SHIP_TO_EMAIL_ADDRESS = model.SHIP_TO_EMAIL_ADDRESS;
				entity.PRIORITY = model.PRIORITY;
				entity.USER_STAMP = model.USER_STAMP;
				entity.DATE_TIME_STAMP = model.DATE_TIME_STAMP;
				entity.REQUESTED_DELIVERY_DATE = model.REQUESTED_DELIVERY_DATE;
				entity.REQUESTED_DELIVERY_TYPE = model.REQUESTED_DELIVERY_TYPE;
				entity.SCHEDULED_SHIP_DATE = model.SCHEDULED_SHIP_DATE;
				entity.ACTUAL_SHIP_DATE_TIME = model.ACTUAL_SHIP_DATE_TIME;
				entity.ACTUAL_DELIVERY_DATE_TIME = model.ACTUAL_DELIVERY_DATE_TIME;
				entity.DELIVERY_NOTE = model.DELIVERY_NOTE;
				entity.REJECTION_NOTE = model.REJECTION_NOTE;
				entity.INTERNAL_WAVE_NUM = model.INTERNAL_WAVE_NUM;
				entity.SHIP_DOCK = model.SHIP_DOCK;
				entity.ALLOCATE_COMPLETE = model.ALLOCATE_COMPLETE;
				entity.TOTAL_QTY = model.TOTAL_QTY;
				entity.TOTAL_WEIGHT = model.TOTAL_WEIGHT;
				entity.WEIGHT_UM = model.WEIGHT_UM;
				entity.TOTAL_VOLUME = model.TOTAL_VOLUME;
				entity.VOLUME_UM = model.VOLUME_UM;
				entity.TOTAL_LINES = model.TOTAL_LINES;
				entity.TOTAL_CONTAINERS = model.TOTAL_CONTAINERS;
				entity.CARRIER = model.CARRIER;
				entity.CARRIER_SERVICE = model.CARRIER_SERVICE;
				entity.USER_DEF1 = model.USER_DEF1;
				entity.USER_DEF2 = model.USER_DEF2;
				entity.USER_DEF3 = model.USER_DEF3;
				entity.USER_DEF4 = model.USER_DEF4;
				entity.USER_DEF5 = model.USER_DEF5;
				entity.USER_DEF6 = model.USER_DEF6;
				entity.USER_DEF7 = model.USER_DEF7;
				entity.USER_DEF8 = model.USER_DEF8;
				entity.BACK_ORDER_NUM = model.BACK_ORDER_NUM;
				entity.LAST_WAVE_NUM = model.LAST_WAVE_NUM;
				entity.GROUP_NUM = model.GROUP_NUM;
				entity.GROUP_INDEX = model.GROUP_INDEX;
				entity.SIGN_VALUE = model.SIGN_VALUE;
				entity.SHIPMENT_SUB_TYPE = model.SHIPMENT_SUB_TYPE;
				entity.SHIPMENT_CATEGORY1 = model.SHIPMENT_CATEGORY1;
				entity.SHIPMENT_CATEGORY2 = model.SHIPMENT_CATEGORY2;
				entity.SHIPMENT_CATEGORY3 = model.SHIPMENT_CATEGORY3;
				entity.SHIPMENT_CATEGORY4 = model.SHIPMENT_CATEGORY4;
				entity.SHIPMENT_CATEGORY5 = model.SHIPMENT_CATEGORY5;
				entity.SHIPMENT_CATEGORY6 = model.SHIPMENT_CATEGORY6;
				entity.SHIPMENT_CATEGORY7 = model.SHIPMENT_CATEGORY7;
				entity.SHIPMENT_CATEGORY8 = model.SHIPMENT_CATEGORY8;
				entity.SHIP_TO_MOBILE = model.SHIP_TO_MOBILE;
				entity.SHIPMENT_NOTE = model.SHIPMENT_NOTE;
				entity.TOTAL_VALUE = model.TOTAL_VALUE;
				entity.USER_DEF9 = model.USER_DEF9;
				entity.USER_DEF10 = model.USER_DEF10;
				entity.UPLOAD_INTERFACE_FLAG = model.UPLOAD_INTERFACE_FLAG;
				entity.STOP_SEQ = model.STOP_SEQ;
				entity.CREATE_DATE_TIME = model.CREATE_DATE_TIME;
				entity.CREATE_USER = model.CREATE_USER;
				entity.COD_REQUIRED = model.COD_REQUIRED;
				entity.COD_VALUE = model.COD_VALUE;
				entity.DEIVERY_WINDOW = model.DEIVERY_WINDOW;
				entity.ALLOW_CONSOLIDATE = model.ALLOW_CONSOLIDATE;
				entity.CONSOLIDATED = model.CONSOLIDATED;
				entity.INVOICE_REQUIRED = model.INVOICE_REQUIRED;
				entity.INTERNAL_INVOICE_NUM = model.INTERNAL_INVOICE_NUM;
				entity.HOST_COMPANY = model.HOST_COMPANY;
				entity.UPLOAD_INTERFACE_DATE_TIME = model.UPLOAD_INTERFACE_DATE_TIME;
				entity.UPLOAD_INTERFACE_REQUIRED = model.UPLOAD_INTERFACE_REQUIRED;
				entity.SO_OPERATOR = model.SO_OPERATOR;
				entity.SO_OPERATOR_PHONE_NUM = model.SO_OPERATOR_PHONE_NUM;
				entity.SO_EMAIL_ADDRESS = model.SO_EMAIL_ADDRESS;
  
				m_Rep.Create(entity);
		}



		 public virtual void RemoveById(ref ValidationErrors errors, string id)
		{
			
				m_Rep.RemoveById(id);
			
		}

		public virtual void RemoveByIds(ref ValidationErrors errors, string[] deleteCollection)
		{
				if (deleteCollection != null)
				{
				   //事务批量删除
				   // using (TransactionScope transactionScope = new TransactionScope())
				   // {
				   //     if (m_Rep.Delete(deleteCollection) == deleteCollection.Length)
				   //     {
				   //         transactionScope.Complete();
				   //         return true;
				   //     }
				   //    else
				   //     {
				   //         Transaction.Current.Rollback();
				   //         return false;
				   //     }
				   // }
				   m_Rep.RemoveById(deleteCollection);
				}
		}

		
	   

		public virtual void Modify(ref ValidationErrors errors, Apps.Models.SCV.AR.AR_DOWNLOAD_SHIPMENT_HEADER_MODEL model,params string[] updateProperties)
		{
				Apps.Models.AR_DOWNLOAD_SHIPMENT_HEADER entity = m_Rep.GetById(model.INTERFACE_RECORD_ID);
				if (entity == null)
				{
					errors.Add(Resource.Disable);
					return;
				}
							  				if (updateProperties.Count() <= 0){
										entity.INTERFACE_RECORD_ID = model.INTERFACE_RECORD_ID;
											entity.INTERFACE_ACTION_CODE = model.INTERFACE_ACTION_CODE;
											entity.INTERFACE_CONDITION = model.INTERFACE_CONDITION;
											entity.PROCESS_STAMP = model.PROCESS_STAMP;
											entity.WAREHOUSE = model.WAREHOUSE;
											entity.COMPANY = model.COMPANY;
											entity.INTERNAL_LOAD_NUM = model.INTERNAL_LOAD_NUM;
											entity.SHIPMENT_ID = model.SHIPMENT_ID;
											entity.ERP_ORDER = model.ERP_ORDER;
											entity.LEADING_STS = model.LEADING_STS;
											entity.TRAILING_STS = model.TRAILING_STS;
											entity.PROCESS_TYPE = model.PROCESS_TYPE;
											entity.SHIPMENT_TYPE = model.SHIPMENT_TYPE;
											entity.ROUTE = model.ROUTE;
											entity.SHIP_TO = model.SHIP_TO;
											entity.SHIP_TO_NAME = model.SHIP_TO_NAME;
											entity.SHIP_TO_ADDRESS1 = model.SHIP_TO_ADDRESS1;
											entity.SHIP_TO_ADDRESS2 = model.SHIP_TO_ADDRESS2;
											entity.SHIP_TO_DISTRICT = model.SHIP_TO_DISTRICT;
											entity.SHIP_TO_CITY = model.SHIP_TO_CITY;
											entity.SHIP_TO_STATE = model.SHIP_TO_STATE;
											entity.SHIP_TO_COUNTRY = model.SHIP_TO_COUNTRY;
											entity.SHIP_TO_POSTAL_CODE = model.SHIP_TO_POSTAL_CODE;
											entity.SHIP_TO_ATTENTION_TO = model.SHIP_TO_ATTENTION_TO;
											entity.SHIP_TO_PHONE_NUM = model.SHIP_TO_PHONE_NUM;
											entity.SHIP_TO_FAX_NUM = model.SHIP_TO_FAX_NUM;
											entity.SHIP_TO_EMAIL_ADDRESS = model.SHIP_TO_EMAIL_ADDRESS;
											entity.PRIORITY = model.PRIORITY;
											entity.USER_STAMP = model.USER_STAMP;
											entity.DATE_TIME_STAMP = model.DATE_TIME_STAMP;
											entity.REQUESTED_DELIVERY_DATE = model.REQUESTED_DELIVERY_DATE;
											entity.REQUESTED_DELIVERY_TYPE = model.REQUESTED_DELIVERY_TYPE;
											entity.SCHEDULED_SHIP_DATE = model.SCHEDULED_SHIP_DATE;
											entity.ACTUAL_SHIP_DATE_TIME = model.ACTUAL_SHIP_DATE_TIME;
											entity.ACTUAL_DELIVERY_DATE_TIME = model.ACTUAL_DELIVERY_DATE_TIME;
											entity.DELIVERY_NOTE = model.DELIVERY_NOTE;
											entity.REJECTION_NOTE = model.REJECTION_NOTE;
											entity.INTERNAL_WAVE_NUM = model.INTERNAL_WAVE_NUM;
											entity.SHIP_DOCK = model.SHIP_DOCK;
											entity.ALLOCATE_COMPLETE = model.ALLOCATE_COMPLETE;
											entity.TOTAL_QTY = model.TOTAL_QTY;
											entity.TOTAL_WEIGHT = model.TOTAL_WEIGHT;
											entity.WEIGHT_UM = model.WEIGHT_UM;
											entity.TOTAL_VOLUME = model.TOTAL_VOLUME;
											entity.VOLUME_UM = model.VOLUME_UM;
											entity.TOTAL_LINES = model.TOTAL_LINES;
											entity.TOTAL_CONTAINERS = model.TOTAL_CONTAINERS;
											entity.CARRIER = model.CARRIER;
											entity.CARRIER_SERVICE = model.CARRIER_SERVICE;
											entity.USER_DEF1 = model.USER_DEF1;
											entity.USER_DEF2 = model.USER_DEF2;
											entity.USER_DEF3 = model.USER_DEF3;
											entity.USER_DEF4 = model.USER_DEF4;
											entity.USER_DEF5 = model.USER_DEF5;
											entity.USER_DEF6 = model.USER_DEF6;
											entity.USER_DEF7 = model.USER_DEF7;
											entity.USER_DEF8 = model.USER_DEF8;
											entity.BACK_ORDER_NUM = model.BACK_ORDER_NUM;
											entity.LAST_WAVE_NUM = model.LAST_WAVE_NUM;
											entity.GROUP_NUM = model.GROUP_NUM;
											entity.GROUP_INDEX = model.GROUP_INDEX;
											entity.SIGN_VALUE = model.SIGN_VALUE;
											entity.SHIPMENT_SUB_TYPE = model.SHIPMENT_SUB_TYPE;
											entity.SHIPMENT_CATEGORY1 = model.SHIPMENT_CATEGORY1;
											entity.SHIPMENT_CATEGORY2 = model.SHIPMENT_CATEGORY2;
											entity.SHIPMENT_CATEGORY3 = model.SHIPMENT_CATEGORY3;
											entity.SHIPMENT_CATEGORY4 = model.SHIPMENT_CATEGORY4;
											entity.SHIPMENT_CATEGORY5 = model.SHIPMENT_CATEGORY5;
											entity.SHIPMENT_CATEGORY6 = model.SHIPMENT_CATEGORY6;
											entity.SHIPMENT_CATEGORY7 = model.SHIPMENT_CATEGORY7;
											entity.SHIPMENT_CATEGORY8 = model.SHIPMENT_CATEGORY8;
											entity.SHIP_TO_MOBILE = model.SHIP_TO_MOBILE;
											entity.SHIPMENT_NOTE = model.SHIPMENT_NOTE;
											entity.TOTAL_VALUE = model.TOTAL_VALUE;
											entity.USER_DEF9 = model.USER_DEF9;
											entity.USER_DEF10 = model.USER_DEF10;
											entity.UPLOAD_INTERFACE_FLAG = model.UPLOAD_INTERFACE_FLAG;
											entity.STOP_SEQ = model.STOP_SEQ;
											entity.CREATE_DATE_TIME = model.CREATE_DATE_TIME;
											entity.CREATE_USER = model.CREATE_USER;
											entity.COD_REQUIRED = model.COD_REQUIRED;
											entity.COD_VALUE = model.COD_VALUE;
											entity.DEIVERY_WINDOW = model.DEIVERY_WINDOW;
											entity.ALLOW_CONSOLIDATE = model.ALLOW_CONSOLIDATE;
											entity.CONSOLIDATED = model.CONSOLIDATED;
											entity.INVOICE_REQUIRED = model.INVOICE_REQUIRED;
											entity.INTERNAL_INVOICE_NUM = model.INTERNAL_INVOICE_NUM;
											entity.HOST_COMPANY = model.HOST_COMPANY;
											entity.UPLOAD_INTERFACE_DATE_TIME = model.UPLOAD_INTERFACE_DATE_TIME;
											entity.UPLOAD_INTERFACE_REQUIRED = model.UPLOAD_INTERFACE_REQUIRED;
											entity.SO_OPERATOR = model.SO_OPERATOR;
											entity.SO_OPERATOR_PHONE_NUM = model.SO_OPERATOR_PHONE_NUM;
											entity.SO_EMAIL_ADDRESS = model.SO_EMAIL_ADDRESS;
									}else{
					
						Type type = typeof(Apps.Models.SCV.AR.AR_DOWNLOAD_SHIPMENT_HEADER_MODEL);
						Type typeE = typeof(Apps.Models.AR_DOWNLOAD_SHIPMENT_HEADER);
						foreach (var item in updateProperties) {
						System.Reflection.PropertyInfo pi = type.GetProperty(item);
						System.Reflection.PropertyInfo piE = typeE.GetProperty(item);
						piE.SetValue(entity,pi.GetValue(model),null);
				}
				}
				 

				m_Rep.Modify(entity,updateProperties);
		}

	  

		public virtual Apps.Models.SCV.AR.AR_DOWNLOAD_SHIPMENT_HEADER_MODEL GetById(string id)
		{
			Apps.Models.AR_DOWNLOAD_SHIPMENT_HEADER entity = m_Rep.GetById(id);
			if (entity!=null)
			{
				//AR_DOWNLOAD_SHIPMENT_HEADER entity = m_Rep.GetById(id);
				Apps.Models.SCV.AR.AR_DOWNLOAD_SHIPMENT_HEADER_MODEL model = new Apps.Models.SCV.AR.AR_DOWNLOAD_SHIPMENT_HEADER_MODEL();
							  				model.INTERFACE_RECORD_ID = entity.INTERFACE_RECORD_ID;
				model.INTERFACE_ACTION_CODE = entity.INTERFACE_ACTION_CODE;
				model.INTERFACE_CONDITION = entity.INTERFACE_CONDITION;
				model.PROCESS_STAMP = entity.PROCESS_STAMP;
				model.WAREHOUSE = entity.WAREHOUSE;
				model.COMPANY = entity.COMPANY;
				model.INTERNAL_LOAD_NUM = entity.INTERNAL_LOAD_NUM;
				model.SHIPMENT_ID = entity.SHIPMENT_ID;
				model.ERP_ORDER = entity.ERP_ORDER;
				model.LEADING_STS = entity.LEADING_STS;
				model.TRAILING_STS = entity.TRAILING_STS;
				model.PROCESS_TYPE = entity.PROCESS_TYPE;
				model.SHIPMENT_TYPE = entity.SHIPMENT_TYPE;
				model.ROUTE = entity.ROUTE;
				model.SHIP_TO = entity.SHIP_TO;
				model.SHIP_TO_NAME = entity.SHIP_TO_NAME;
				model.SHIP_TO_ADDRESS1 = entity.SHIP_TO_ADDRESS1;
				model.SHIP_TO_ADDRESS2 = entity.SHIP_TO_ADDRESS2;
				model.SHIP_TO_DISTRICT = entity.SHIP_TO_DISTRICT;
				model.SHIP_TO_CITY = entity.SHIP_TO_CITY;
				model.SHIP_TO_STATE = entity.SHIP_TO_STATE;
				model.SHIP_TO_COUNTRY = entity.SHIP_TO_COUNTRY;
				model.SHIP_TO_POSTAL_CODE = entity.SHIP_TO_POSTAL_CODE;
				model.SHIP_TO_ATTENTION_TO = entity.SHIP_TO_ATTENTION_TO;
				model.SHIP_TO_PHONE_NUM = entity.SHIP_TO_PHONE_NUM;
				model.SHIP_TO_FAX_NUM = entity.SHIP_TO_FAX_NUM;
				model.SHIP_TO_EMAIL_ADDRESS = entity.SHIP_TO_EMAIL_ADDRESS;
				model.PRIORITY = entity.PRIORITY;
				model.USER_STAMP = entity.USER_STAMP;
				model.DATE_TIME_STAMP = entity.DATE_TIME_STAMP;
				model.REQUESTED_DELIVERY_DATE = entity.REQUESTED_DELIVERY_DATE;
				model.REQUESTED_DELIVERY_TYPE = entity.REQUESTED_DELIVERY_TYPE;
				model.SCHEDULED_SHIP_DATE = entity.SCHEDULED_SHIP_DATE;
				model.ACTUAL_SHIP_DATE_TIME = entity.ACTUAL_SHIP_DATE_TIME;
				model.ACTUAL_DELIVERY_DATE_TIME = entity.ACTUAL_DELIVERY_DATE_TIME;
				model.DELIVERY_NOTE = entity.DELIVERY_NOTE;
				model.REJECTION_NOTE = entity.REJECTION_NOTE;
				model.INTERNAL_WAVE_NUM = entity.INTERNAL_WAVE_NUM;
				model.SHIP_DOCK = entity.SHIP_DOCK;
				model.ALLOCATE_COMPLETE = entity.ALLOCATE_COMPLETE;
				model.TOTAL_QTY = entity.TOTAL_QTY;
				model.TOTAL_WEIGHT = entity.TOTAL_WEIGHT;
				model.WEIGHT_UM = entity.WEIGHT_UM;
				model.TOTAL_VOLUME = entity.TOTAL_VOLUME;
				model.VOLUME_UM = entity.VOLUME_UM;
				model.TOTAL_LINES = entity.TOTAL_LINES;
				model.TOTAL_CONTAINERS = entity.TOTAL_CONTAINERS;
				model.CARRIER = entity.CARRIER;
				model.CARRIER_SERVICE = entity.CARRIER_SERVICE;
				model.USER_DEF1 = entity.USER_DEF1;
				model.USER_DEF2 = entity.USER_DEF2;
				model.USER_DEF3 = entity.USER_DEF3;
				model.USER_DEF4 = entity.USER_DEF4;
				model.USER_DEF5 = entity.USER_DEF5;
				model.USER_DEF6 = entity.USER_DEF6;
				model.USER_DEF7 = entity.USER_DEF7;
				model.USER_DEF8 = entity.USER_DEF8;
				model.BACK_ORDER_NUM = entity.BACK_ORDER_NUM;
				model.LAST_WAVE_NUM = entity.LAST_WAVE_NUM;
				model.GROUP_NUM = entity.GROUP_NUM;
				model.GROUP_INDEX = entity.GROUP_INDEX;
				model.SIGN_VALUE = entity.SIGN_VALUE;
				model.SHIPMENT_SUB_TYPE = entity.SHIPMENT_SUB_TYPE;
				model.SHIPMENT_CATEGORY1 = entity.SHIPMENT_CATEGORY1;
				model.SHIPMENT_CATEGORY2 = entity.SHIPMENT_CATEGORY2;
				model.SHIPMENT_CATEGORY3 = entity.SHIPMENT_CATEGORY3;
				model.SHIPMENT_CATEGORY4 = entity.SHIPMENT_CATEGORY4;
				model.SHIPMENT_CATEGORY5 = entity.SHIPMENT_CATEGORY5;
				model.SHIPMENT_CATEGORY6 = entity.SHIPMENT_CATEGORY6;
				model.SHIPMENT_CATEGORY7 = entity.SHIPMENT_CATEGORY7;
				model.SHIPMENT_CATEGORY8 = entity.SHIPMENT_CATEGORY8;
				model.SHIP_TO_MOBILE = entity.SHIP_TO_MOBILE;
				model.SHIPMENT_NOTE = entity.SHIPMENT_NOTE;
				model.TOTAL_VALUE = entity.TOTAL_VALUE;
				model.USER_DEF9 = entity.USER_DEF9;
				model.USER_DEF10 = entity.USER_DEF10;
				model.UPLOAD_INTERFACE_FLAG = entity.UPLOAD_INTERFACE_FLAG;
				model.STOP_SEQ = entity.STOP_SEQ;
				model.CREATE_DATE_TIME = entity.CREATE_DATE_TIME;
				model.CREATE_USER = entity.CREATE_USER;
				model.COD_REQUIRED = entity.COD_REQUIRED;
				model.COD_VALUE = entity.COD_VALUE;
				model.DEIVERY_WINDOW = entity.DEIVERY_WINDOW;
				model.ALLOW_CONSOLIDATE = entity.ALLOW_CONSOLIDATE;
				model.CONSOLIDATED = entity.CONSOLIDATED;
				model.INVOICE_REQUIRED = entity.INVOICE_REQUIRED;
				model.INTERNAL_INVOICE_NUM = entity.INTERNAL_INVOICE_NUM;
				model.HOST_COMPANY = entity.HOST_COMPANY;
				model.UPLOAD_INTERFACE_DATE_TIME = entity.UPLOAD_INTERFACE_DATE_TIME;
				model.UPLOAD_INTERFACE_REQUIRED = entity.UPLOAD_INTERFACE_REQUIRED;
				model.SO_OPERATOR = entity.SO_OPERATOR;
				model.SO_OPERATOR_PHONE_NUM = entity.SO_OPERATOR_PHONE_NUM;
				model.SO_EMAIL_ADDRESS = entity.SO_EMAIL_ADDRESS;
 
				return model;
			}
			else
			{
				return null;
			}
		}

	 

	}
}
